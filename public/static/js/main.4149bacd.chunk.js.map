{"version":3,"sources":["components/Login.js","components/SignUp.js","components/GameCard.js","components/MatchCard.js","components/MatchContainer.js","components/GameContainer.js","components/AddNewGame.js","components/Header.js","components/Home.js","components/HeaderNonUser.js","components/App.js","index.js"],"names":["Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","Login","setUser","useState","email","setEmail","password","setPassword","emailValid","setEmailValid","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","e","preventDefault","String","toLowerCase","match","checkEmail","user","fetch","method","headers","body","JSON","stringify","then","res","ok","json","data","errors","console","log","target","reset","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","value","onChange","error","helperText","Button","mb","Grid","container","item","xs","SignUp","firstname","setFirstname","lastname","setLastname","username","setUsername","passwordRepeat","setPasswordRepeat","passwordMatch","setPasswordMatch","checkPassword","first_name","last_name","newUser","alert","spacing","sm","justifyContent","GameCard","game","setSelectedGame","gamesPlayed","gamesWon","winPercentage","averageScore","gameAnalytics","setGameAnalytics","useEffect","matchData","obtainAnalytics","gp","gw","wp","totpt","avgsc","areScores","map","givenMatch","playerData","players","find","isPlayer","score","is_winner","truncatedWinPercentage","truncatedAverageScore","output","player","user_id","num1","num2","scoreString","toString","indexOfDecimal","indexOf","truncatedPercentage","slice","parseFloat","Card","CardContent","size","onClick","MatchCard","date","open","setOpen","playerWinner","setPlayerWinner","mapPlayers","TableRow","border","TableCell","style","TableContainer","Paper","Table","minWidth","aria-label","TableHead","IconButton","TableBody","MatchContainer","selectedGame","setMatchData","mapMatches","ml","startIcon","GameContainer","userGames","setClickFind","game_ids","mapGames","includes","push","length","AddNewGame","setAddNew","allGames","setAllGames","allUsers","setAllUsers","gameInput","setGameInput","dateInput","setDateInput","game_id","newMatch","setNewMatch","match_id","allPlayers","setAllPlayers","allPlayerEmails","setAllPlayerEmails","handleMatch","newMatchEntry","matchInDB","handlePlayerSubmit","comparePlayerEmails","playersForEntry","ceiling","givenPlayer","preparedEntry","playerinDB","handleFormReset","handleGameInput","input","inputComparison","gameInDB","gameForEntry","givenGame","gameComparison","newGameEntry","r","games","users","handlePlayerName","indexValue","parseInt","playerEntries","handlePlayerScore","handlePlayerEmail","playerEmails","handlePlayerWin","counter","givenPlayerEmail","playerList","emailComparison","givenUser","databaseEmail","FormControlLabel","control","Checkbox","spawnPlayers","playersMinusOne","pop","Header","goHome","AppBar","position","p","Toolbar","disableGutters","noWrap","mr","md","flexGrow","to","my","Home","setUserGames","clickFind","addNew","gameData","sortedGames","sort","a","b","HeaderNonUser","App","foundUser","className","exact","path","ReactDOM","render","document","getElementById"],"mappings":"qUAuJMA,EAAY,SAACC,GACjB,OACE,eAACC,EAAA,EAAD,yBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFJ,GAJN,cAMG,kBACD,cAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,IAA3B,2BAEQ,KACP,IAAIC,MAAOC,cACX,SAKDC,EAAQC,cAECC,EA9JD,SAAC,GAAiB,IAAD,EAAdC,EAAc,EAAdA,QACf,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBACA,GADA,UAC4BA,mBAAS,KAArC,6BAyCA,OACE,cAACO,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,eAACY,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,cAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,gBAA7B,SACE,cAAC,IAAD,MAEF,cAAChC,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,qBAGA,eAACuB,EAAA,EAAD,CACEH,UAAU,OACVY,SA5CW,SAACC,GACpBA,EAAEC,iBAhBe,WACjB,GACEC,OAAOvB,GACJwB,cACAC,MACC,yJAIJ,OADApB,GAAc,GACPD,EAEPC,GAAc,SAACD,GAAD,OAAiBA,KAMjCsB,GACA,IAAMC,EAAO,CACX3B,QACAE,YAEF0B,MAAM,SAAU,CACdC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KACpBO,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAUxC,EAAQwC,MAElCH,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,SAI5CtC,EAAS,IACTE,EAAY,IACZkB,EAAEqB,OAAOC,SAwBDC,YAAU,EACVhC,GAAI,CAAEiC,GAAI,GAJZ,UAMGzC,EACC,cAAC0C,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,KAAK,OACLC,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,UAGrC,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,gBACNQ,WAAW,uCACXvE,QAAQ,SACRoE,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,UAGvC,cAACV,EAAA,GAAD,GACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,oBARf,qBASO,YATP,sBAUSnD,GAVT,0BAWY,SAACmB,GAAD,OAAOlB,EAAYkB,EAAEqB,OAAOc,UAXxC,IAaA,cAACI,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACT7D,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GAJnB,qBAQA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAAC1E,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAvB,gCAIF,cAAC0E,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACzE,EAAA,EAAD,CAAMC,KAAK,UAAUJ,QAAQ,QAA7B,uDAOR,cAAC,EAAD,CAAWwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,WCqH9B5E,EAAY,SAACC,GACjB,OACE,eAACC,EAAA,EAAD,yBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFJ,GAJN,cAMG,kBACD,cAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,IAA3B,2BAEQ,KACP,IAAIC,MAAOC,cACX,SAKDC,EAAQC,cAECsE,EA7QA,SAAC,GAAgB,EAAdpE,QAAe,IAC/B,EAAkCC,mBAAS,IAA3C,mBAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAAgCrE,mBAAS,IAAzC,mBAAOsE,EAAP,KAAiBC,EAAjB,KACA,EAA0BvE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBC,EAAjB,KACA,EAAoCzE,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4CJ,mBAAS,IAArD,mBAAO0E,EAAP,KAAuBC,EAAvB,KACA,EAA0C3E,oBAAS,GAAnD,mBAAO4E,EAAP,KAAsBC,EAAtB,KACA,EAAkC7E,mBAAS,IAA3C,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBAEM2B,GAFN,UAEmB,WACjB,GACEH,OAAOvB,GACJwB,cACAC,MACC,yJAIJ,OADApB,GAAc,GACPD,EAEPC,GAAc,SAACD,GAAD,OAAiBA,OAI7ByE,GAAgB,WACpB,GAAI3E,IAAauE,EAEf,OADAG,GAAiB,GACVD,EAEPC,GAAiB,SAACD,GAAD,OAAoBA,MAgDzC,OACE,cAACrE,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,eAACY,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,cAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,gBAA7B,SACE,cAAC,IAAD,MAEF,cAAChC,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,qBAGA,eAACuB,EAAA,EAAD,CACEH,UAAU,OACVoC,YAAU,EACVxB,SAjEW,SAACC,GAKpB,GAJAA,EAAEC,iBACFI,IACAmD,KAEInD,GAAcmD,GAAe,CAC/B,IAAMlD,EAAO,CACXmD,WAAYX,EACZY,UAAWV,EACXrE,QACAuE,WACArE,YAGF0B,MAAM,UAAW,CACfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KACpBO,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAAC8C,GACfxC,QAAQC,IAAIuC,GACZC,MAAM,6CAAD,OAC0CD,EAAQhF,MADlD,mCAKPmC,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,SAI5C6B,EAAa,IACbE,EAAY,IACZrE,EAAS,IACTuE,EAAY,IACZrE,EAAY,IACZuE,EAAkB,IAElBrD,EAAEqB,OAAOC,UA0BH/B,GAAI,CAAEiC,GAAI,GAJZ,UAME,eAACiB,EAAA,EAAD,CAAMC,WAAS,EAACmB,QAAS,EAAzB,UACE,cAACpB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIkB,GAAI,EAAvB,SACE,cAACrC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,aACbD,KAAK,YACLF,GAAG,YACHC,MAAM,aACNG,WAAS,EACTE,MAAOW,EACPV,SAAU,SAACpC,GAAD,OAAO+C,EAAa/C,EAAEqB,OAAOc,YAG3C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIkB,GAAI,EAAvB,SACE,cAACrC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,cACbH,GAAG,WACHC,MAAM,YACNC,KAAK,WACLI,MAAOa,EACPZ,SAAU,SAACpC,GAAD,OAAOiD,EAAYjD,EAAEqB,OAAOc,YAI1C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACG7D,EACC,cAAC0C,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbG,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,UAGrC,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,gBACNQ,WAAW,uCACXvE,QAAQ,SACRoE,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,YAIzC,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACnB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,WACbH,GAAG,WACHC,MAAM,WACNC,KAAK,WACLI,MAAOe,EACPd,SAAU,SAACpC,GAAD,OAAOmD,EAAYnD,EAAEqB,OAAOc,YAG1C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACGU,EACC,cAAC7B,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,eACbG,MAAOtD,EACPuD,SAAU,SAACpC,GAAD,OAAOlB,EAAYkB,EAAEqB,OAAOc,UAGxC,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,WACNQ,WAAW,0CACXvE,QAAQ,SACRmE,KAAK,WACLC,MAAOtD,EACPuD,SAAU,SAACpC,GAAD,OAAOlB,EAAYkB,EAAEqB,OAAOc,YAI5C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACGU,EACC,cAAC7B,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTG,KAAK,iBACLD,MAAM,sBACNI,KAAK,WACLL,GAAG,iBACHG,aAAa,qBACbG,MAAOiB,EACPhB,SAAU,SAACpC,GAAD,OAAOqD,EAAkBrD,EAAEqB,OAAOc,UAG9C,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,sBACNQ,WAAW,0CACXvE,QAAQ,SACRmE,KAAK,WACLC,MAAOiB,EACPhB,SAAU,SAACpC,GAAD,OAAOqD,EAAkBrD,EAAEqB,OAAOc,eAKpD,cAACI,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACT7D,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GAJnB,qBAQA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACqB,eAAe,WAA/B,SACE,cAACtB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACzE,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAvB,wDAOR,cAAC,EAAD,CAAWwB,GAAI,CAAEiC,GAAI,W,kBC5IdwC,EA5GE,SAAC,GAAqC,IAAnC1D,EAAkC,EAAlCA,KAAM2D,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAC9B,EAA0CxF,mBAAS,CACjDuF,KAAMA,EAAKlC,KACXoC,YAAa,KACbC,SAAU,KACVC,cAAe,KACfC,aAAc,OALhB,mBAAOC,EAAP,KAAsBC,EAAtB,KAYAC,qBAAU,WACRlE,MAAM,UAAD,OAAWD,EAAKuB,GAAhB,kBAA4BoC,EAAKpC,GAAjC,aACFhB,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAAC6D,GACLC,EAAgBD,QAEnB,IAEH,IAAMC,EAAkB,SAAC1D,GACvB,IAAI2D,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAQ,EACRC,EAAQ,EACRC,GAAY,EAChBhE,EAAKiE,KAAI,SAACC,GACRP,GAAU,EACV,IAAIQ,EAAaD,EAAWE,QAAQC,KAAKC,GACrCH,EAAWI,QACbT,GAAgBK,EAAWI,MAC3BP,GAAY,GAEc,GAAxBG,EAAWK,YACbZ,GAAU,MAIZC,EADED,EAAK,EACFa,EAAuBb,EAAID,GAE3B,EAGLI,EADEC,EACMU,EAAsBZ,EAAOH,GAE7B,MAEV,IAAIgB,EAAS,CACX3B,KAAMA,EAAKlC,KACXoC,YAAaS,EACbR,SAAUS,EACVR,cAAeS,EACfR,aAAcU,GAGhB,OADAR,EAAiBoB,GACVA,GAGHL,EAAW,SAACM,GAChB,OAAOA,EAAOC,SAAWxF,EAAKuB,IAG1B8D,EAAwB,SAACI,EAAMC,GACnC,IACIC,GADMF,EAAOC,GACKE,WAClBC,EAAiBF,EAAYG,QAAQ,KACrCC,EAAsBJ,EAAYK,MAAM,EAAGH,EAAiB,GAChE,OAAOI,WAAWF,IAGdX,EAAyB,SAACK,EAAMC,GACpC,IACIC,GADMF,EAAOC,EAAQ,KACJE,WACjBC,EAAiBF,EAAYG,QAAQ,KACrCC,EAAsBJ,EAAYK,MAAM,EAAGH,EAAiB,GAChE,OAAOI,WAAWF,IAGpB,OACE,cAAC/G,EAAA,EAAD,CAAKoD,WAAS,EAACnB,YAAU,EAAChC,GAAI,CAAEiC,GAAI,GAApC,SACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,GAAKvD,MAAM,SAAxC,SACE,eAACuI,EAAA,EAAD,CAAMjH,GAAI,CAAEH,SAAU,KAAtB,UACE,eAACqH,EAAA,EAAD,CAAaxI,MAAM,SAASsB,GAAI,CAAEiC,GAAI,GAAtC,UACE,cAAC1D,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,SACG8E,EAAKlC,OAER,uBACA,cAACjE,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,kCACqBoF,EAAcD,gBAEnC,uBACA,cAACxG,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,mCACsBoF,EAAcF,cADpC,cACuDE,EAAcH,SADrE,YACiFG,EAAcJ,YAD/F,UAIF,cAACsC,EAAA,EAAD,CAAaxI,MAAM,SAAnB,SACE,cAACsE,EAAA,EAAD,CAAQmE,KAAK,QAAQzI,MAAM,QAAQ0I,QAzFpB,WACvBzC,EAAgBD,IAwFR,yC,2GCTG2C,EApFG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMxB,EAAoB,EAApBA,QAAS/E,EAAW,EAAXA,KAClC,EAAwB5B,oBAAS,GAAjC,mBAAOoI,EAAP,KAAaC,EAAb,KACA,EAAwCrI,oBAAS,GAAjD,mBAAOsI,EAAP,KAAqBC,EAArB,KAUAxC,qBAAU,WAPRY,EAAQH,KAAI,SAACW,GACPA,EAAOC,UAAYxF,EAAKuB,KAA2B,IAArBgE,EAAOJ,WACvCwB,GAAgB,QAOnB,IAEH,IAAMC,EAAa7B,EAAQH,KAAI,SAACW,GAC9B,OAAyB,IAArBA,EAAOJ,UAEP,eAAC0B,EAAA,EAAD,CACE5H,GAAI,CAAE,mCAAoC,CAAE6H,OAAQ,IAEpDnJ,MAAM,SAHR,UAKE,cAACoJ,EAAA,EAAD,CAAWpJ,MAAM,SAAjB,gCAAiC4H,EAAO9D,KAAxC,mBACA,cAACsF,EAAA,EAAD,CAAWpJ,MAAM,SAAjB,mBAA8B4H,EAAOL,MAArC,qBAJKK,EAAOhE,IASd,eAACsF,EAAA,EAAD,CACE5H,GAAI,CAAE,mCAAoC,CAAE6H,OAAQ,IAEpDnJ,MAAM,SAHR,UAKE,cAACoJ,EAAA,EAAD,CAAWpJ,MAAM,SAAjB,SAA2B4H,EAAO9D,OAClC,cAACsF,EAAA,EAAD,CAAWpJ,MAAM,SAAjB,SAA2B4H,EAAOL,UAJ7BK,EAAOhE,OAUpB,OACE,cAACvC,EAAA,EAAD,CACEoD,WAAS,EACTnB,YAAU,EACVhC,GAAI,CAAEiC,GAAI,GACV8F,MAAO,CAAE7H,QAAS,OAAQsE,eAAgB,UAJ5C,SAME,cAACwD,EAAA,EAAD,CAAgBpI,UAAWqI,IAAOjI,GAAI,CAAEH,SAAU,KAAOnB,MAAM,SAA/D,SACE,eAACwJ,EAAA,EAAD,CAAOlI,GAAI,CAAEmI,SAAU,KAAOC,aAAW,eAAe1J,MAAM,SAA9D,UACE,cAAC2J,EAAA,EAAD,CAAW3J,MAAM,SAAjB,SACE,cAACkJ,EAAA,EAAD,CAAUlJ,MAAM,SAAhB,SACE,eAACoJ,EAAA,EAAD,CAAWpJ,MAAM,SAAjB,UACE,cAAC4J,EAAA,EAAD,CACEF,aAAW,aACXjB,KAAK,QACLC,QAAS,kBAAMI,GAASD,IAH1B,SAKGA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,MAEnCE,EAAY,qCACWH,EADX,yCAEQA,UAK1BC,EACC,cAACc,EAAA,EAAD,CAAW3J,MAAM,SAAjB,SACE,eAACkJ,EAAA,EAAD,CAAUlJ,MAAM,SAAhB,UACE,cAACoJ,EAAA,EAAD,CAAWpJ,MAAM,SAAjB,qBACA,cAACoJ,EAAA,EAAD,CAAWpJ,MAAM,SAAjB,wBAGF,KAEH6I,EAAO,cAACgB,EAAA,EAAD,CAAW7J,MAAM,SAAjB,SAA2BiJ,IAA0B,a,iBCpCxDa,EAjDQ,SAAC,GAA6C,IAA3C7D,EAA0C,EAA1CA,gBAAiB8D,EAAyB,EAAzBA,aAAc1H,EAAW,EAAXA,KACvD,EAAkC5B,mBAAS,IAA3C,mBAAOgG,EAAP,KAAkBuD,EAAlB,KAEAxD,qBAAU,WACRlE,MAAM,UAAD,OAAWD,EAAKuB,GAAhB,kBAA4BmG,EAAanG,GAAzC,aACFhB,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAAC6D,GACLuD,EAAavD,QAEhB,IAEH,IAAMwD,EAAaxD,EAAUQ,KAAI,SAAC9E,GAChC,OACE,cAAC,EAAD,CAEEyB,GAAIzB,EAAMyB,GACVgF,KAAMzG,EAAMyG,KACZxB,QAASjF,EAAMiF,QACf/E,KAAMA,GAJDF,EAAMyB,OASjB,OACE,eAACvC,EAAA,EAAD,CACEoD,WAAS,EACTnB,YAAU,EACVhC,GAAI,CAAEiC,GAAI,GACV8F,MAAO,CAAEvD,eAAgB,UAJ3B,UAME,cAACtB,EAAA,EAAD,CAAMxE,MAAM,OAAOsB,GAAI,CAAE4I,GAAI,GAA7B,SACE,cAAC5F,EAAA,EAAD,CACE6F,UAAW,cAAC,IAAD,IACXzB,QAAS,kBAAMzC,EAAgB,KAFjC,oBAQF,eAACzB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,GAAKvD,MAAM,SAAxC,UACE,cAACH,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,SACGiK,EAAajG,OAEfmG,SC6BMG,EAvEO,SAAC,GAAuC,IAArC/H,EAAoC,EAApCA,KAAMgI,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxC,EAAwC7J,mBAAS,IAAjD,mBAAOsJ,EAAP,KAAqB9D,EAArB,KAEIsE,EAAW,GAETC,EAAWH,EAAUpD,KAAI,SAACjB,GAC9B,IAAmC,IAA/BuE,EAASE,SAASzE,EAAKpC,IAEzB,OADA2G,EAASG,KAAK1E,EAAKpC,IAEjB,cAAC,EAAD,CAEEA,GAAIoC,EAAKpC,GACTvB,KAAMA,EACN2D,KAAMA,EACNC,gBAAiBA,GAJZD,EAAKpC,OAUlB,OAAwB,IAArByG,EAAUM,OAET,cAACtJ,EAAA,EAAD,CACAoD,WAAS,EACTnB,YAAU,EACVhC,GAAI,CAAEiC,GAAI,GACV8F,MAAO,CAAEvD,eAAgB,UAJzB,SAMA,eAACtB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,GAAKvD,MAAM,SAAxC,UACF,cAACH,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,+CAGF,cAACD,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,oFAMyB,IAAhBiK,EAEL,eAAC1I,EAAA,EAAD,CACEoD,WAAS,EACTnB,YAAU,EACVhC,GAAI,CAAEiC,GAAI,GACV8F,MAAO,CAAEvD,eAAgB,UAJ3B,UAME,cAACtB,EAAA,EAAD,CAAMxE,MAAM,OAAOsB,GAAI,CAAE4I,GAAI,GAA7B,SACE,cAAC5F,EAAA,EAAD,CACE6F,UAAW,cAAC,IAAD,IACXzB,QAAS,kBAAM4B,GAAa,IAF9B,oBAOF,cAAC9F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,GAAKvD,MAAM,SAAxC,SACGwK,OAOL,cAAC,EAAD,CACET,aAAcA,EACd1H,KAAMA,EACN4D,gBAAiBA,K,0BC+UnB5F,GAAQC,cAECsK,GA5YI,SAAC,GAAyB,IAAvBvI,EAAsB,EAAtBA,KAAMwI,EAAgB,EAAhBA,UAC1B,EAAgCpK,mBAAS,IAAzC,mBAAOqK,EAAP,KAAiBC,EAAjB,KACA,EAAgCtK,mBAAS,IAAzC,mBAAOuK,EAAP,KAAiBC,EAAjB,KACA,EAAkCxK,mBAAS,IAA3C,mBAAOyK,EAAP,KAAkBC,EAAlB,KACA,EAAkC1K,mBAAS,IAA3C,mBAAO2K,EAAP,KAAkBC,EAAlB,KACA,EAAgC5K,mBAAS,CACvC6K,QAAS,KACT1C,KAAMwC,IAFR,mBAAOG,EAAP,KAAiBC,EAAjB,KAIA,EAAoC/K,mBAAS,CAC3C,CACEoH,QAASxF,EAAKuB,GACd6H,SAAU,KACVlE,MAAO,KACPC,WAAW,EACX1D,KAAK,GAAD,OAAKzB,EAAKmD,WAAV,YAAwBnD,EAAKoD,WACjC/E,MAAO,MAPX,mBAAOgL,EAAP,KAAmBC,EAAnB,KAUA,EAA8ClL,mBAAS,CAAC4B,EAAK3B,QAA7D,mBAAOkL,EAAP,KAAwBC,EAAxB,KA4BMC,EAAc,SAAC/J,EAAGiE,GACtB,IAAI+F,EAAa,2BAAQR,GAAR,IAAkBD,QAAStF,EAAKpC,GAAIgF,KAAMwC,IAC3D9I,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUoJ,KACpBnJ,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAACoJ,GACf9I,QAAQC,IAAR,6BAAkCT,KAAKC,UAAUqJ,KACjDC,EAAmBlK,EAAGiK,MAGxBnJ,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,UAKxCgJ,EAAqB,SAAClK,EAAGI,GAC7B+J,IACA,IAAIC,EAAe,YAAOT,GACtBU,EAAUD,EAAgBxB,OAEVwB,EAAgBlF,KAAI,SAACoF,GACvCA,EAAYZ,SAAWtJ,EAAMyB,GAC7B,IAAI0I,EAAgB,CAClBzE,QAASwE,EAAYxE,QACrB4D,SAAUY,EAAYZ,SACtBlE,MAAO8E,EAAY9E,MACnBC,UAAW6E,EAAY7E,UACvB1D,KAAMuI,EAAYvI,MAEpBZ,QAAQC,IAAIT,KAAKC,UAAU2J,EAAe,KAAM,IAChDhK,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU2J,KACpB1J,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAAC2J,GACfrJ,QAAQC,IAAR,8BACyBT,KAAKC,UAAU4J,EAAY,KAAM,QAI5D1J,EACGE,OACAH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAR,UAAemJ,EAAcxI,KAA7B,cAAuCb,OAE9CmJ,GA1EG,SAACrK,GACvBoJ,EAAa,IACbE,EAAa,IACbG,EAAY,CACVF,QAAS,KACT1C,KAAMwC,IAERO,EAAc,CACZ,CACE9D,QAASxF,EAAKuB,GACd6H,SAAU,KACVlE,MAAO,KACPC,WAAW,EACX1D,KAAK,GAAD,OAAKzB,EAAKmD,WAAV,YAAwBnD,EAAKoD,WACjC/E,MAAO,MAGXmL,EAAmB,CAACxJ,EAAK3B,QACzBqB,EAAEqB,OAAOC,QAyDHmJ,CAAgBzK,GAEE,SAKpB0K,EAAkB,SAAC1K,EAAG2K,GAC1B,IAAIC,EAAkBD,EAAMxK,cACxB0K,GAAW,EACXC,GAAe,EACC/B,EAAS7D,KAAI,SAAC6F,GAChC,IAAIC,EAAiBD,EAAUhJ,KAAK5B,cAChCyK,IAAoBI,IACtBH,GAAW,EACXC,EAAeC,EACf5J,QAAQC,IAAR,4BAAiC2J,EAAUhJ,YAG9B,IAAb8I,GACFtK,MAAM,SAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBmB,KAAM4I,MAEP9J,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAACoK,GACfH,EAAeG,EACf9J,QAAQC,IAAR,0BAA+BT,KAAKC,UAAUkK,KAC9CrB,EAAY,2BACPD,GADM,IAETD,QAASuB,EAAajJ,GACtBgF,KAAMwC,KAERU,EAAY/J,EAAG8K,MAGjBhK,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,UAI7B,IAAb2J,IACF1J,QAAQC,IAAR,0BAA+BT,KAAKC,UAAUkK,KAC9CrB,EAAY,2BAAKD,GAAN,IAAgBD,QAASuB,EAAajJ,GAAIgF,KAAMwC,KAC3DU,EAAY/J,EAAG8K,KAInBrG,qBAAU,WACRlE,MAAM,UAAUM,MAAK,SAACqK,GAChBA,EAAEnK,IACJmK,EAAElK,OAAOH,MAAK,SAACsK,GAAD,OAAWnC,EAAYmC,WAGxC,IAEH1G,qBAAU,WACRlE,MAAM,UAAUM,MAAK,SAACqK,GAChBA,EAAEnK,IACJmK,EAAElK,OAAOH,MAAK,SAACuK,GAAD,OAAWlC,EAAYkC,WAGxC,IAEH,IAAMC,EAAmB,SAACrL,GACxB,IAAMsL,EAAaC,SAASvL,EAAEqB,OAAOU,MACjCyJ,EAAa,YAAO7B,GACxB6B,EAAcF,GAAYvJ,KAAO/B,EAAEqB,OAAOc,MAC1CyH,EAAc4B,IAGVC,EAAoB,SAACzL,GACzB,IAAMsL,EAAaC,SAASvL,EAAEqB,OAAOU,MACjCyJ,EAAa,YAAO7B,GACxB6B,EAAcF,GAAY9F,MAAQxF,EAAEqB,OAAOc,MAC3CyH,EAAc4B,IAGVE,EAAoB,SAAC1L,GACzB,IAAMsL,EAAaC,SAASvL,EAAEqB,OAAOU,MACjC4J,EAAY,YAAO9B,GACvB8B,EAAaL,GAActL,EAAEqB,OAAOc,MACpC2H,EAAmB6B,GACnB,IAAIH,EAAa,YAAO7B,GACxB6B,EAAcF,GAAY3M,MAAQqB,EAAEqB,OAAOc,MAC3CyH,EAAc4B,IAGVI,EAAkB,SAAC5L,GACvB,IAAMsL,EAAaC,SAASvL,EAAEqB,OAAOU,MACjCyJ,EAAa,YAAO7B,GACxB6B,EAAcF,GAAY7F,WAAa+F,EAAcF,GAAY7F,UACjEmE,EAAc4B,IAGVrB,EAAsB,WAC1B,IAAI0B,EAAU,EACOhC,EAAgB3E,KAAI,SAAC4G,GACxC,IAAIC,EAAU,YAAOpC,GACjBqC,EAAkBF,EAAiB3L,cACnB8I,EAAS/D,KAAI,SAAC+G,GAChC,IAAIC,EAAgBD,EAAUtN,MAC1BqN,IAAoBE,EAAc/L,gBACpC4L,EAAWF,GAAS/F,QAAUmG,EAAUpK,GACxCkK,EAAWF,GAASlN,MAAQsN,EAAUtN,MACtCoN,EACEF,GACA9J,KAFF,UAEYkK,EAAUxI,WAFtB,YAEoCwI,EAAUvI,WAC9CvC,QAAQC,IAAR,yBAA8B8K,EAA9B,kBAAqDD,EAAUpK,KAC/D+H,EAAcmC,OAGlBF,GAAW,MAkFf,OACE,8BACE,cAAC5M,EAAA,EAAD,CAAeX,MAAOA,GAAtB,SACE,eAACY,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdI,SAlSW,SAACC,GACpBA,EAAEC,iBACFyK,EAAgB1K,EAAGmJ,IAyRb,UASE,cAACrL,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,0BAIA,cAACuB,EAAA,EAAD,CAAKH,UAAU,OAAOoC,YAAU,EAAChC,GAAI,CAAEiC,GAAI,GAA3C,SACE,eAACiB,EAAA,EAAD,CAAMC,WAAS,EAACmB,QAAS,EAAzB,UACE,cAACpB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIkB,GAAI,EAAvB,SACE,cAACrC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,YACbD,KAAK,OACLF,GAAG,WACHC,MAAM,OACNG,WAAS,EACTG,SAAU,SAACpC,GAAD,OAAOoJ,EAAapJ,EAAEqB,OAAOc,YAI3C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIkB,GAAI,EAAvB,SACE,cAACrC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,aACbH,GAAG,YACHC,MAAM,eACNC,KAAK,OACLK,SAAU,SAACpC,GAAD,OAAOsJ,EAAatJ,EAAEqB,OAAOc,YAlGpC,WACnB,IAAI0J,EAAU,EAqDd,OApDyB,YAAIlC,GAAYzE,KAAI,SAACoF,GAE5C,OADAuB,GAAoB,EAElB,eAACpJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,UACE,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACnB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAY,gBAAW6J,EAAX,QACZhK,GAAE,gBAAWgK,EAAX,QACF/J,MAAK,iBAAY+J,EAAZ,SACL9J,KAAI,UAAK8J,EAAU,GACnBzJ,SAAUiJ,MAId,cAAC5I,EAAA,EAAD,UACE,cAAChB,EAAA,EAAD,CACElC,GAAI,CAAEiC,GAAI,GACVI,WAAS,EACTI,aAAY,gBAAW6J,EAAX,SACZhK,GAAE,gBAAWgK,EAAX,SACF/J,MAAK,iBAAY+J,EAAZ,8CACL9J,KAAI,UAAK8J,EAAU,GACnBzJ,SAAUsJ,KARd,gBAAoBG,EAApB,UAYA,cAACpJ,EAAA,EAAD,UACE,cAAChB,EAAA,EAAD,CACElC,GAAI,CAAEiC,GAAI,GACVI,WAAS,EACTI,aAAY,gBAAW6J,EAAX,SACZhK,GAAE,gBAAWgK,EAAX,SACF/J,MAAK,iBAAY+J,EAAZ,UACL9J,KAAI,UAAK8J,EAAU,GACnBzJ,SAAUqJ,KARd,gBAAoBI,EAApB,UAYA,cAACpJ,EAAA,EAAD,UACE,cAAC0J,EAAA,EAAD,CAEExF,QAASiF,EACT7J,KAAI,UAAK8J,EAAU,GACnBO,QAAS,cAACC,EAAA,EAAD,IACTvK,MAAK,+BAAgB+J,EAAhB,uBALP,gBACgBA,EADhB,aAtCJ,gBAAiCA,EAAjC,eAiGSS,GAED,cAAC7J,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG3E,MAAM,SAAxB,SACE,cAACsE,EAAA,EAAD,CACEmE,KAAK,QACL3I,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GACjBmE,QAlIA,SAAC3G,GACjB4J,EAAc,GAAD,mBACRD,GADQ,CAEX,CACE7D,QAAS,EACT4D,SAAU,KACVlE,MAAO,KACPC,WAAW,EACX1D,KAAM,GACNpD,MAAO,OAGXmL,EAAmB,GAAD,mBAAKD,GAAL,CAAsB,OAkH1B,0BAUF,cAACpH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAG3E,MAAM,SAAxB,SACE,cAACsE,EAAA,EAAD,CACEmE,KAAK,QACL3I,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GACjBmE,QA9HG,SAAC3G,GACpB,IAAIuM,EAAe,YAAO5C,GAC1B4C,EAAgBC,MAChB5C,EAAc2C,IAuHA,6BAUF,cAAChK,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACT7D,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GAJnB,0BAQA,cAACD,EAAA,EAAD,CACEX,WAAS,EACT5D,MAAM,QACND,QAAQ,YACRwB,GAAI,CAAEiD,GAAI,GACVmE,QAAS,kBAAMmC,GAAU,IAL3B,oC,oBCzTD2D,GAlEA,SAAC,GAA0C,IAAxChO,EAAuC,EAAvCA,QAAS8J,EAA8B,EAA9BA,aAAcO,EAAgB,EAAhBA,UAWjC4D,EAAS,WACbnE,GAAa,GACbO,GAAU,IAGZ,OACE,cAAC6D,GAAA,EAAD,CAAQC,SAAS,SAASrN,GAAI,CAAEsN,EAAG,GAAnC,SACE,cAAC3N,EAAA,EAAD,CAAWE,SAAS,KAApB,SACE,eAAC0N,GAAA,EAAD,CAASC,gBAAc,EAAvB,UACE,cAACjP,EAAA,EAAD,CACEC,QAAQ,KACRiP,QAAM,EACN7N,UAAU,MACVI,GAAI,CAAE0N,GAAI,EAAGxN,QAAS,CAAEmD,GAAI,OAAQsK,GAAI,SACxCvG,QAAS+F,EALX,yBAUA,cAACpN,EAAA,EAAD,CAAKC,GAAI,CAAE4N,SAAU,EAAG1N,QAAS,CAAEmD,GAAI,OAAQsK,GAAI,SAAnD,SAaE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAAC7K,EAAA,EAAD,CACEhD,GAAI,CAAE8N,GAAI,EAAGrP,MAAO,QAASyB,QAAS,SACtCkH,QAAS+F,EAFX,sBASJ,cAACpN,EAAA,EAAD,CAAKC,GAAI,CAAE4N,SAAU,GAArB,SACE,cAAC5K,EAAA,EAAD,CACEhD,GAAI,CAAE8N,GAAI,EAAGrP,MAAO,QAASyB,QAAS,SACtCkH,QAvDS,WACnBlI,EAAQ,MACR8B,MAAM,UAAW,CACfC,OAAQ,SACRC,QAAS,CACP,eAAgB,uBAgDZ,8BC0BG6M,GA9EF,SAAC,GAAuB,IAArBhN,EAAoB,EAApBA,KAAM7B,EAAc,EAAdA,QACpB,EAAkCC,mBAAS,IAA3C,mBAAO4J,EAAP,KAAkBiF,EAAlB,KACA,EAAkC7O,oBAAS,GAA3C,mBAAO8O,EAAP,KAAkBjF,EAAlB,KACA,EAA4B7J,oBAAS,GAArC,mBAAO+O,EAAP,KAAe3E,EAAf,KAgBA,OACE,gCACE,cAAC,GAAD,CACErK,QAASA,EACT8J,aAAcA,EACdO,UAAWA,IAGZ0E,GAAaC,EACZ,8BACE,eAACnO,EAAA,EAAD,CAAKoD,WAAS,EAACnB,YAAU,EAAChC,GAAI,CAAEiC,GAAI,GAAK8F,MAAO,CAAE7H,QAAS,QAA3D,UACE,cAACgD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,EAAGyL,GAAI,GAAKhP,MAAM,QAA/C,SACE,eAACuI,EAAA,EAAD,CAAMjH,GAAI,CAAEH,SAAU,KAAtB,UACE,cAACqH,EAAA,EAAD,CAAaxI,MAAM,SAASsB,GAAI,CAAEiC,GAAI,GAAtC,SACE,cAAC1D,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,wBAIF,cAACsH,EAAA,EAAD,CAAaxI,MAAM,SAAnB,SACE,cAACsE,EAAA,EAAD,CAAQmE,KAAK,QAAQzI,MAAM,QAAQ0I,QAjC3B,WACtBpG,MAAM,UAAD,OAAWD,EAAKuB,GAAhB,WACFhB,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAAC6M,GACL,IAAIC,EAAcD,EAASE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE9L,KAAO+L,EAAE/L,KAAO,GAAK,KAClEwL,EAAaI,GACbpF,GAAa,SAACiF,GAAD,OAAgBA,SA2BnB,yBAON,cAAC/K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,EAAG2G,GAAI,GAAKlK,MAAM,OAA/C,SACE,eAACuI,EAAA,EAAD,CAAMjH,GAAI,CAAEH,SAAU,KAAtB,UACE,cAACqH,EAAA,EAAD,CAAaxI,MAAM,SAASsB,GAAI,CAAEiC,GAAI,GAAtC,SACE,cAAC1D,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,4BAIF,cAACsH,EAAA,EAAD,CAAaxI,MAAM,SAAnB,SACE,cAACsE,EAAA,EAAD,CAAQmE,KAAK,QAAQzI,MAAM,QAAQ0I,QAtC7B,WACpBmC,GAAU,SAAC2E,GAAD,OAAaA,MAqCT,8BAQPD,GAAaC,EAChB,8BACE,cAAC,EAAD,CACEnN,KAAMA,EACNgI,UAAWA,EACXC,aAAcA,MAGhBiF,IAAcC,EAChB,8BACE,cAAC,GAAD,CAAYnN,KAAMA,EAAMwI,UAAWA,MAEnC,SClDKiF,GA1BO,WACpB,OACE,cAACpB,GAAA,EAAD,CAAQC,SAAS,SAASrN,GAAI,CAAEsN,EAAG,GAAnC,SACE,cAAC3N,EAAA,EAAD,CAAWE,SAAS,KAApB,SACE,eAAC0N,GAAA,EAAD,CAASC,gBAAc,EAAvB,UACE,cAACzN,EAAA,EAAD,CAAKC,GAAI,CAAE4N,SAAU,EAAG1N,QAAS,CAAEmD,GAAI,OAAQsK,GAAI,SAAnD,SACE,cAACpP,EAAA,EAAD,CACEC,QAAQ,KACRiP,QAAM,EACN7N,UAAU,MACVI,GAAI,CAAE0N,GAAI,EAAGxN,QAAS,CAAEmD,GAAI,OAAQsK,GAAI,SAJ1C,2BAUF,cAAC5N,EAAA,EAAD,CAAKC,GAAI,CAAE4N,SAAU,GAArB,SACE,cAAC5K,EAAA,EAAD,CAAQhD,GAAI,CAAE8N,GAAI,EAAGrP,MAAO,QAASyB,QAAS,SAAWtB,KAAK,IAA9D,6BC8BG6P,GA9CH,WACV,MAAwBtP,mBAAS,MAAjC,mBAAO4B,EAAP,KAAa7B,EAAb,KAYA,OAVAgG,qBAAU,WACRlE,MAAM,OAAOM,MAAK,SAACqK,GACbA,EAAEnK,IACJmK,EAAElK,OAAOH,MAAK,SAACoN,GACbxP,EAAQwP,WAIb,IAEC3N,EAEA,qBAAK4N,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,CAAM3P,QAASA,EAAS6B,KAAMA,WAOpC,sBAAK4N,UAAU,MAAf,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,CAAQ3P,QAASA,MAEnB,cAAC,IAAD,CAAO0P,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAO3P,QAASA,aCzC5B4P,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4149bacd.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst Login = ({ setUser }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [login, setLogin] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    const user = {\n      email,\n      password,\n    };\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(user),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((data) => setUser(data));\n      } else {\n        res.json().then((errors) => console.log(errors));\n      }\n    });\n\n    setEmail(\"\");\n    setPassword(\"\");\n    e.target.reset();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            {emailValid ? (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            ) : (\n              <TextField\n                error\n                required\n                fullWidth\n                id=\"filled-error-helper-text\"\n                label=\"Email Address\"\n                helperText=\"Must be a valid email containing '@'\"\n                variant=\"filled\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            )}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  Don't have an account? Sign Up\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Score Counter\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst theme = createTheme();\n\nexport default Login;\n","import { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst SignUp = ({ setUser }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const [setSignUp, setSetSignUp] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const checkPassword = () => {\n    if (password === passwordRepeat) {\n      setPasswordMatch(true);\n      return passwordMatch;\n    } else {\n      setPasswordMatch((passwordMatch) => !passwordMatch);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    checkPassword();\n\n    if (checkEmail && checkPassword) {\n      const user = {\n        first_name: firstname,\n        last_name: lastname,\n        email,\n        username,\n        password,\n      };\n\n      fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((newUser) => {\n            console.log(newUser);\n            alert(\n              `You have sucessfully signed up with email ${newUser.email}. Log in and make em count!`\n            );\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n\n      setFirstname(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      setPasswordRepeat(\"\");\n\n      e.target.reset();\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"primary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  label=\"First name\"\n                  autoFocus\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"family-name\"\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                {emailValid ? (\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Email Address\"\n                    helperText=\"Must be a valid email containing '@'\"\n                    variant=\"filled\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"username\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Password\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password-match\"\n                    label=\"Type Password Again\"\n                    type=\"password\"\n                    id=\"password-match\"\n                    autoComplete=\"new-password-match\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Type Password Again\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                )}\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Score Counter\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst theme = createTheme();\n\nexport default SignUp;\n","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\n\nconst GameCard = ({ user, game, setSelectedGame }) => {\n  const [gameAnalytics, setGameAnalytics] = useState({\n    game: game.name,\n    gamesPlayed: null,\n    gamesWon: null,\n    winPercentage: null,\n    averageScore: null,\n  });\n\n  const handleSelectGame = () => {\n    setSelectedGame(game);\n  };\n\n  useEffect(() => {\n    fetch(`/users/${user.id}/games/${game.id}/matches`)\n      .then((res) => res.json())\n      .then((matchData) => {\n        obtainAnalytics(matchData);\n      });\n  }, []);\n\n  const obtainAnalytics = (data) => {\n    let gp = 0;\n    let gw = 0;\n    let wp = 0;\n    let totpt = 0;\n    let avgsc = 0;\n    let areScores = false;\n    data.map((givenMatch) => {\n      gp = gp + 1;\n      let playerData = givenMatch.players.find(isPlayer);\n      if (playerData.score) {\n        totpt = totpt + playerData.score;\n        areScores = true;\n      }\n      if (playerData.is_winner == true) {\n        gw = gw + 1;\n      }\n    });\n    if (gw > 0) {\n      wp = truncatedWinPercentage(gw, gp);\n    } else {\n      wp = 0;\n    }\n    if (areScores) {\n      avgsc = truncatedAverageScore(totpt, gp);\n    } else {\n      avgsc = \"N/A\";\n    }\n    let output = {\n      game: game.name,\n      gamesPlayed: gp,\n      gamesWon: gw,\n      winPercentage: wp,\n      averageScore: avgsc,\n    };\n    setGameAnalytics(output);\n    return output;\n  };\n\n  const isPlayer = (player) => {\n    return player.user_id == user.id;\n  };\n\n  const truncatedAverageScore = (num1, num2) => {\n    let avg = num1 / num2;\n    let scoreString = avg.toString();\n    let indexOfDecimal = scoreString.indexOf(\".\");\n    let truncatedPercentage = scoreString.slice(0, indexOfDecimal + 3);\n    return parseFloat(truncatedPercentage);\n  };\n\n  const truncatedWinPercentage = (num1, num2) => {\n    let wp = (num1 / num2) * 100;\n    let scoreString = wp.toString();\n    let indexOfDecimal = scoreString.indexOf(\".\");\n    let truncatedPercentage = scoreString.slice(0, indexOfDecimal + 3);\n    return parseFloat(truncatedPercentage);\n  };\n\n  return (\n    <Box container noValidate sx={{ mt: 3 }}>\n      <Grid item xs={12} sx={{ mt: 3 }} align=\"center\">\n        <Card sx={{ maxWidth: 275 }}>\n          <CardContent align=\"center\" sx={{ mt: 3 }}>\n            <Typography variant=\"h5\" component=\"div\">\n              {game.name}\n            </Typography>\n            <br></br>\n            <Typography variant=\"h7\" component=\"div\">\n              {`Average Score: ${gameAnalytics.averageScore}`}\n            </Typography>\n            <br></br>\n            <Typography variant=\"h7\" component=\"div\">\n              {`Win Percentage: ${gameAnalytics.winPercentage}% (${gameAnalytics.gamesWon}/${gameAnalytics.gamesPlayed})`}\n            </Typography>\n          </CardContent>\n          <CardContent align=\"center\">\n            <Button size=\"small\" align=\"right\" onClick={handleSelectGame}>\n              View Games Played\n            </Button>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default GameCard;\n","import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport Box from \"@mui/material/Box\";\nimport { useState, useEffect } from \"react\";\n\nconst MatchCard = ({ date, players, user }) => {\n  const [open, setOpen] = useState(false);\n  const [playerWinner, setPlayerWinner] = useState(false);\n\n  const isSelfWinner = () => {\n    players.map((player) => {\n      if (player.user_id === user.id && player.is_winner === true) {\n        setPlayerWinner(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    isSelfWinner();\n  }, []);\n\n  const mapPlayers = players.map((player) => {\n    if (player.is_winner === true) {\n      return (\n        <TableRow\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          key={player.id}\n          align=\"center\"\n        >\n          <TableCell align=\"center\">{`👑 ${player.name} 👑`}</TableCell>\n          <TableCell align=\"center\">{`${player.score} 👑`}</TableCell>\n        </TableRow>\n      );\n    } else {\n      return (\n        <TableRow\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          key={player.id}\n          align=\"center\"\n        >\n          <TableCell align=\"center\">{player.name}</TableCell>\n          <TableCell align=\"center\">{player.score}</TableCell>\n        </TableRow>\n      );\n    }\n  });\n\n  return (\n    <Box\n      container\n      noValidate\n      sx={{ mt: 3 }}\n      style={{ display: \"flex\", justifyContent: \"center\" }}\n    >\n      <TableContainer component={Paper} sx={{ maxWidth: 750 }} align=\"center\">\n        <Table sx={{ minWidth: 400 }} aria-label=\"simple table\" align=\"center\">\n          <TableHead align=\"center\">\n            <TableRow align=\"center\">\n              <TableCell align=\"center\">\n                <IconButton\n                  aria-label=\"expand row\"\n                  size=\"small\"\n                  onClick={() => setOpen(!open)}\n                >\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                </IconButton>\n                {playerWinner\n                  ? `👑 Date of Game: ${date} 👑`\n                  : `Date of Game: ${date}`}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          {open ? (\n            <TableHead align=\"center\">\n              <TableRow align=\"center\">\n                <TableCell align=\"center\">Players</TableCell>\n                <TableCell align=\"center\">Score</TableCell>\n              </TableRow>\n            </TableHead>\n          ) : null}\n\n          {open ? <TableBody align=\"center\">{mapPlayers}</TableBody> : null}\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default MatchCard;\n","import { useEffect, useState } from \"react\";\nimport MatchCard from \"./MatchCard\";\nimport { Button, Box, Grid, Typography } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nconst MatchContainer = ({ setSelectedGame, selectedGame, user }) => {\n  const [matchData, setMatchData] = useState([]);\n\n  useEffect(() => {\n    fetch(`/users/${user.id}/games/${selectedGame.id}/matches`)\n      .then((res) => res.json())\n      .then((matchData) => {\n        setMatchData(matchData);\n      });\n  }, []);\n\n  const mapMatches = matchData.map((match) => {\n    return (\n      <MatchCard\n        key={match.id}\n        id={match.id}\n        date={match.date}\n        players={match.players}\n        user={user}\n      />\n    );\n  });\n\n  return (\n    <Box\n      container\n      noValidate\n      sx={{ mt: 3 }}\n      style={{ justifyContent: \"center\" }}\n    >\n      <Grid align=\"left\" sx={{ ml: 5 }}>\n        <Button\n          startIcon={<ArrowBackIcon />}\n          onClick={() => setSelectedGame(\"\")}\n        >\n          Back\n        </Button>\n      </Grid>\n\n      <Grid item xs={12} sx={{ mt: 3 }} align=\"center\">\n        <Typography component=\"h1\" variant=\"h4\">\n          {selectedGame.name}\n        </Typography>\n        {mapMatches}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default MatchContainer;\n","import { useState } from \"react\";\nimport GameCard from \"./GameCard\";\nimport MatchContainer from \"./MatchContainer\";\nimport { Button, Box, Grid, Typography } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nconst GameContainer = ({ user, userGames, setClickFind }) => {\n  const [selectedGame, setSelectedGame] = useState(\"\");\n\n  let game_ids = [];\n\n  const mapGames = userGames.map((game) => {\n    if (game_ids.includes(game.id) === false) {\n      game_ids.push(game.id);\n      return (\n        <GameCard\n          key={game.id}\n          id={game.id}\n          user={user}\n          game={game}\n          setSelectedGame={setSelectedGame}\n        />\n      );\n    }\n  });\n\n  if(userGames.length === 0){\n    return (\n      <Box\n      container\n      noValidate\n      sx={{ mt: 3 }}\n      style={{ justifyContent: \"center\" }}\n    >\n      <Grid item xs={12} sx={{ mt: 3 }} align=\"center\">\n    <Typography component=\"h1\" variant=\"h4\">\n    You haven't played any games yet!\n  </Typography>\n  <Typography component=\"h1\" variant=\"h4\">\n    Go to \"Log New Game\" next time you play one and save the results!\n  </Typography>\n  </Grid>\n  </Box>)\n  } \n  else if (selectedGame == \"\") {\n    return (\n      <Box\n        container\n        noValidate\n        sx={{ mt: 3 }}\n        style={{ justifyContent: \"center\" }}\n      >\n        <Grid align=\"left\" sx={{ ml: 5 }}>\n          <Button\n            startIcon={<ArrowBackIcon />}\n            onClick={() => setClickFind(true)}\n          >\n            Back\n          </Button>\n        </Grid>\n        <Grid item xs={12} sx={{ mt: 3 }} align=\"center\">\n          {mapGames}\n        </Grid>\n      </Box>\n    );\n  }\n  else {\n    return (\n      <MatchContainer\n        selectedGame={selectedGame}\n        user={user}\n        setSelectedGame={setSelectedGame}\n      />\n    );\n  }\n};\n\nexport default GameContainer;\n","import { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst AddNewGame = ({ user, setAddNew }) => {\n  const [allGames, setAllGames] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n  const [gameInput, setGameInput] = useState(\"\");\n  const [dateInput, setDateInput] = useState(\"\");\n  const [newMatch, setNewMatch] = useState({\n    game_id: null,\n    date: dateInput,\n  });\n  const [allPlayers, setAllPlayers] = useState([\n    {\n      user_id: user.id,\n      match_id: null,\n      score: null,\n      is_winner: false,\n      name: `${user.first_name} ${user.last_name}`,\n      email: \"\",\n    },\n  ]);\n  const [allPlayerEmails, setAllPlayerEmails] = useState([user.email]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleGameInput(e, gameInput);\n  };\n\n  const handleFormReset = (e) => {\n    setGameInput(\"\");\n    setDateInput(\"\");\n    setNewMatch({\n      game_id: null,\n      date: dateInput,\n    });\n    setAllPlayers([\n      {\n        user_id: user.id,\n        match_id: null,\n        score: null,\n        is_winner: false,\n        name: `${user.first_name} ${user.last_name}`,\n        email: \"\",\n      },\n    ]);\n    setAllPlayerEmails([user.email]);\n    e.target.reset()\n  };\n\n  const handleMatch = (e, game) => {\n    let newMatchEntry = { ...newMatch, game_id: game.id, date: dateInput };\n    fetch(\"/matches\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newMatchEntry),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((matchInDB) => {\n          console.log(`Match Added To DB: ${JSON.stringify(matchInDB)}`);\n          handlePlayerSubmit(e, matchInDB);\n        });\n      } else {\n        res.json().then((errors) => console.log(errors));\n      }\n    });\n  };\n\n  const handlePlayerSubmit = (e, match) => {\n    comparePlayerEmails();\n    let playersForEntry = [...allPlayers];\n    let ceiling = playersForEntry.length;\n    let counter = 1;\n    let playerEntries = playersForEntry.map((givenPlayer) => {\n      givenPlayer.match_id = match.id;\n      let preparedEntry = {\n        user_id: givenPlayer.user_id,\n        match_id: givenPlayer.match_id,\n        score: givenPlayer.score,\n        is_winner: givenPlayer.is_winner,\n        name: givenPlayer.name,\n      };\n      console.log(JSON.stringify(preparedEntry, null, 4));\n      fetch(\"/players\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(preparedEntry),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((playerinDB) => {\n            console.log(\n              `Player Added to DB: ${JSON.stringify(playerinDB, null, 4)}`\n            );\n          });\n        } else {\n          res\n            .json()\n            .then((errors) => console.log(`${preparedEntry.name} : ${errors}`));\n        }\n        if ((counter = ceiling)) {\n          handleFormReset(e);\n        }\n        counter = counter + 1;\n      });\n    });\n  };\n\n  const handleGameInput = (e, input) => {\n    let inputComparison = input.toLowerCase();\n    let gameInDB = false;\n    let gameForEntry = false;\n    let comparedGames = allGames.map((givenGame) => {\n      let gameComparison = givenGame.name.toLowerCase();\n      if (inputComparison === gameComparison) {\n        gameInDB = true;\n        gameForEntry = givenGame;\n        console.log(`Game Entry Found: ${givenGame.name}`);\n      }\n    });\n    if (gameInDB === false) {\n      fetch(\"/games\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: input,\n        }),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((newGameEntry) => {\n            gameForEntry = newGameEntry;\n            console.log(`Game For Entry: ${JSON.stringify(gameForEntry)}`);\n            setNewMatch({\n              ...newMatch,\n              game_id: gameForEntry.id,\n              date: dateInput,\n            });\n            handleMatch(e, gameForEntry);\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n    if (gameInDB === true) {\n      console.log(`Game For Entry: ${JSON.stringify(gameForEntry)}`);\n      setNewMatch({ ...newMatch, game_id: gameForEntry.id, date: dateInput });\n      handleMatch(e, gameForEntry);\n    }\n  };\n\n  useEffect(() => {\n    fetch(\"/games\").then((r) => {\n      if (r.ok) {\n        r.json().then((games) => setAllGames(games));\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/users\").then((r) => {\n      if (r.ok) {\n        r.json().then((users) => setAllUsers(users));\n      }\n    });\n  }, []);\n\n  const handlePlayerName = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].name = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const handlePlayerScore = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].score = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const handlePlayerEmail = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEmails = [...allPlayerEmails];\n    playerEmails[indexValue] = e.target.value;\n    setAllPlayerEmails(playerEmails);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].email = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const handlePlayerWin = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].is_winner = !playerEntries[indexValue].is_winner;\n    setAllPlayers(playerEntries);\n  };\n\n  const comparePlayerEmails = () => {\n    let counter = 0;\n    let comparedEmails = allPlayerEmails.map((givenPlayerEmail) => {\n      let playerList = [...allPlayers];\n      let emailComparison = givenPlayerEmail.toLowerCase();\n      let comparedUsers = allUsers.map((givenUser) => {\n        let databaseEmail = givenUser.email;\n        if (emailComparison === databaseEmail.toLowerCase()) {\n          playerList[counter].user_id = givenUser.id;\n          playerList[counter].email = givenUser.email;\n          playerList[\n            counter\n          ].name = `${givenUser.first_name} ${givenUser.last_name}`;\n          console.log(`User Found for ${databaseEmail} at id ${givenUser.id}`);\n          setAllPlayers(playerList);\n        }\n      });\n      counter += 1;\n    });\n  };\n\n  const addPlayer = (e) => {\n    setAllPlayers([\n      ...allPlayers,\n      {\n        user_id: 1,\n        match_id: null,\n        score: null,\n        is_winner: false,\n        name: \"\",\n        email: \"\",\n      },\n    ]);\n    setAllPlayerEmails([...allPlayerEmails, \"\"]);\n  };\n\n  const removePlayer = (e) => {\n    let playersMinusOne = [...allPlayers];\n    playersMinusOne.pop();\n    setAllPlayers(playersMinusOne);\n  };\n\n  const spawnPlayers = () => {\n    let counter = 0;\n    const displayedPlayers = [...allPlayers].map((givenPlayer) => {\n      counter = counter + 1;\n      return (\n        <Grid item xs={12} key={`player${counter}tracker`}>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              autoComplete={`player${counter}name`}\n              id={`player${counter}name`}\n              label={`Player ${counter} Name`}\n              name={`${counter - 1}`}\n              onChange={handlePlayerName}\n            />\n          </Grid>\n\n          <Grid key={`player${counter}email`}>\n            <TextField\n              sx={{ mt: 1 }}\n              fullWidth\n              autoComplete={`player${counter}email`}\n              id={`player${counter}email`}\n              label={`Player ${counter} Email (link score to a friend's account!)`}\n              name={`${counter - 1}`}\n              onChange={handlePlayerEmail}\n            />\n          </Grid>\n\n          <Grid key={`player${counter}score`}>\n            <TextField\n              sx={{ mt: 1 }}\n              fullWidth\n              autoComplete={`player${counter}score`}\n              id={`player${counter}score`}\n              label={`Player ${counter} Score`}\n              name={`${counter - 1}`}\n              onChange={handlePlayerScore}\n            />\n          </Grid>\n\n          <Grid>\n            <FormControlLabel\n              key={`player${counter}wins`}\n              onClick={handlePlayerWin}\n              name={`${counter - 1}`}\n              control={<Checkbox />}\n              label={`👑  Player ${counter} Wins 👑`}\n            />\n          </Grid>\n        </Grid>\n      );\n    });\n    return displayedPlayers;\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Typography component=\"h1\" variant=\"h4\">\n              Add New Game\n            </Typography>\n\n            <Box component=\"form\" noValidate sx={{ mt: 3 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    autoComplete=\"game-name\"\n                    name=\"name\"\n                    id=\"gameName\"\n                    label=\"Game\"\n                    autoFocus\n                    onChange={(e) => setGameInput(e.target.value)}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    autoComplete=\"match-date\"\n                    id=\"matchDate\"\n                    label=\"Date of Game\"\n                    name=\"date\"\n                    onChange={(e) => setDateInput(e.target.value)}\n                  />\n                </Grid>\n\n                {spawnPlayers()}\n\n                <Grid item xs={6} align=\"center\">\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    onClick={addPlayer}\n                  >\n                    Add Player\n                  </Button>\n                </Grid>\n\n                <Grid item xs={6} align=\"center\">\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    onClick={removePlayer}\n                  >\n                    Remove Player\n                  </Button>\n                </Grid>\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2 }}\n                >\n                  Add New Game\n                </Button>\n                <Button\n                  fullWidth\n                  color=\"error\"\n                  variant=\"contained\"\n                  sx={{ mb: 2 }}\n                  onClick={() => setAddNew(true)}\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nconst theme = createTheme();\n\nexport default AddNewGame;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({ setUser, setClickFind, setAddNew }) => {\n  const handleLogout = () => {\n    setUser(null);\n    fetch(\"/logout\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  const goHome = () => {\n    setClickFind(true);\n    setAddNew(true);\n  };\n\n  return (\n    <AppBar position=\"static\" sx={{ p: 2 }}>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n            onClick={goHome}\n          >\n            CountScores\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {/* <Link to=\"/games\">\n              <Button sx={{ my: 2, color: \"white\", display: \"block\" }}>\n                My Games\n              </Button>\n            </Link> */}\n\n            {/* <Link to=\"/addnew\">\n              <Button sx={{ my: 2, color: \"white\", display: \"block\" }}>\n                Add New Game\n              </Button>\n            </Link> */}\n\n            <Link to=\"/\">\n              <Button\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n                onClick={goHome}\n              >\n                Home\n              </Button>\n            </Link>\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Button\n              sx={{ my: 2, color: \"white\", display: \"block\" }}\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Header;\n","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { useState } from \"react\";\nimport GameContainer from \"./GameContainer\";\nimport AddNewGame from \"./AddNewGame\";\nimport Header from \"./Header\";\n\nconst Home = ({ user, setUser }) => {\n  const [userGames, setUserGames] = useState([]);\n  const [clickFind, setClickFind] = useState(true);\n  const [addNew, setAddNew] = useState(true);\n\n  const handleFindGames = () => {\n    fetch(`/users/${user.id}/games`)\n      .then((res) => res.json())\n      .then((gameData) => {\n        let sortedGames = gameData.sort((a, b) => (a.name > b.name ? 1 : -1));\n        setUserGames(sortedGames);\n        setClickFind((clickFind) => !clickFind);\n      });\n  };\n\n  const handleAddGame = () => {\n    setAddNew((addNew) => !addNew);\n  };\n\n  return (\n    <div>\n      <Header\n        setUser={setUser}\n        setClickFind={setClickFind}\n        setAddNew={setAddNew}\n      />\n\n      {clickFind && addNew ? (\n        <div>\n          <Box container noValidate sx={{ mt: 3 }} style={{ display: \"flex\" }}>\n            <Grid item xs={12} sx={{ mt: 3, mr: 5 }} align=\"right\">\n              <Card sx={{ maxWidth: 275 }}>\n                <CardContent align=\"center\" sx={{ mt: 3 }}>\n                  <Typography variant=\"h5\" component=\"div\">\n                    My Games\n                  </Typography>\n                </CardContent>\n                <CardContent align=\"center\">\n                  <Button size=\"small\" align=\"right\" onClick={handleFindGames}>\n                    View\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item xs={12} sx={{ mt: 3, ml: 5 }} align=\"left\">\n              <Card sx={{ maxWidth: 275 }}>\n                <CardContent align=\"center\" sx={{ mt: 3 }}>\n                  <Typography variant=\"h5\" component=\"div\">\n                    Log New Game\n                  </Typography>\n                </CardContent>\n                <CardContent align=\"center\">\n                  <Button size=\"small\" align=\"right\" onClick={handleAddGame}>\n                    Add\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Box>\n        </div>\n      ) : !clickFind && addNew ? (\n        <div>\n          <GameContainer\n            user={user}\n            userGames={userGames}\n            setClickFind={setClickFind}\n          />\n        </div>\n      ) : clickFind && !addNew ? (\n        <div>\n          <AddNewGame user={user} setAddNew={setAddNew} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Home;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\n\nconst HeaderNonUser = () => {\n  return (\n    <AppBar position=\"static\" sx={{ p: 2 }}>\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n            >\n              CountScores\n            </Typography>\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Button sx={{ my: 2, color: \"white\", display: \"block\" }} href=\"/\">\n              Login\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default HeaderNonUser;\n","import { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport Home from \"./Home\";\nimport GamesContainer from \"./GameContainer\";\nimport MatchContainer from \"./MatchContainer\";\nimport HeaderNonUser from \"./HeaderNonUser\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((foundUser) => {\n          setUser(foundUser);\n        });\n      }\n    });\n  }, []);\n\n  if (user) {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/games\">\n            <GamesContainer />\n          </Route>\n          <Route exact path=\"/addnew\">\n            <MatchContainer />\n          </Route>\n          <Route exact path=\"/\">\n            <Home setUser={setUser} user={user} />\n          </Route>\n        </Switch>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"app\">\n        <HeaderNonUser />\n        <Switch>\n          <Route exact path=\"/signup\">\n            <SignUp setUser={setUser}/>\n          </Route>\n          <Route exact path=\"/\">\n            <Login setUser={setUser} />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}