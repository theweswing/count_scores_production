{"version":3,"sources":["components/Login.js","components/SignUp.js","components/GameCard.js","components/MatchCard.js","components/MatchContainer.js","components/GameContainer.js","components/AddNewGame.js","components/Header.js","components/Home.js","components/HeaderNonUser.js","components/App.js","index.js"],"names":["Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createTheme","Login","setUser","useState","email","setEmail","password","setPassword","emailValid","setEmailValid","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","onSubmit","e","preventDefault","String","toLowerCase","match","checkEmail","user","fetch","method","headers","body","JSON","stringify","then","res","ok","json","data","errors","console","log","target","reset","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","value","onChange","error","helperText","Button","mb","Grid","container","item","xs","SignUp","firstname","setFirstname","lastname","setLastname","username","setUsername","passwordRepeat","setPasswordRepeat","passwordMatch","setPasswordMatch","checkPassword","first_name","last_name","spacing","sm","justifyContent","GameCard","game","setSelectedGame","gamesPlayed","gamesWon","winPercentage","averageScore","gameAnalytics","setGameAnalytics","useEffect","matchData","obtainAnalytics","gp","gw","wp","totpt","avgsc","areScores","map","givenMatch","playerData","players","find","isPlayer","score","is_winner","truncatedWinPercentage","truncatedAverageScore","output","player","user_id","num1","num2","scoreString","toString","indexOfDecimal","indexOf","truncatedPercentage","slice","parseFloat","Card","CardContent","size","onClick","MatchCard","date","open","setOpen","playerWinner","setPlayerWinner","mapPlayers","TableRow","border","TableCell","TableContainer","Paper","Table","minWidth","aria-label","TableHead","IconButton","TableBody","MatchContainer","selectedGame","setMatchData","mapMatches","GameContainer","userGames","game_ids","mapGames","includes","push","AddNewGame","allGames","setAllGames","allUsers","setAllUsers","gameInput","setGameInput","dateInput","setDateInput","game_id","newMatch","setNewMatch","match_id","allPlayers","setAllPlayers","allPlayerEmails","setAllPlayerEmails","handleMatch","newMatchEntry","matchInDB","handlePlayerSubmit","comparePlayerEmails","playersForEntry","ceiling","length","givenPlayer","preparedEntry","playerinDB","handleGameInput","input","inputComparison","gameInDB","gameForEntry","givenGame","gameComparison","newGameEntry","r","games","users","handlePlayerName","indexValue","parseInt","playerEntries","handlePlayerScore","handlePlayerEmail","playerEmails","handlePlayerWin","counter","givenPlayerEmail","playerList","emailComparison","givenUser","databaseEmail","FormControlLabel","control","Checkbox","spawnPlayers","playersMinusOne","pop","Header","AppBar","position","Toolbar","disableGutters","noWrap","mr","md","flexGrow","to","my","Home","setUserGames","clickFind","setClickFind","addNew","setAddNew","gameData","sortedGames","sort","a","b","HeaderNonUser","App","foundUser","className","exact","path","ReactDOM","render","document","getElementById"],"mappings":"oUAuJMA,EAAY,SAACC,GACjB,OACE,eAACC,EAAA,EAAD,yBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFJ,GAJN,cAMG,kBACD,cAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,IAA3B,2BAEQ,KACP,IAAIC,MAAOC,cACX,SAKDC,EAAQC,cAECC,EA9JD,SAAC,GAAe,IAAD,EAAbC,EAAa,EAAbA,QACd,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBACA,GADA,UAC4BA,mBAAS,KAArC,6BAyCA,OACE,cAACO,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,eAACY,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,cAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,SACE,cAAC,IAAD,MAEF,cAAChC,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,qBAGA,eAACuB,EAAA,EAAD,CACEH,UAAU,OACVY,SA5CW,SAACC,GACpBA,EAAEC,iBAhBe,WACjB,GACEC,OAAOvB,GACJwB,cACAC,MACC,yJAIJ,OADApB,GAAc,GACPD,EAEPC,GAAc,SAACD,GAAD,OAAiBA,KAMjCsB,GACA,IAAMC,EAAO,CACX3B,QACAE,YAEF0B,MAAM,SAAU,CACdC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KACpBO,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAUxC,EAAQwC,MAElCH,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,SAI5CtC,EAAS,IACTE,EAAY,IACZkB,EAAEqB,OAAOC,SAwBDC,YAAU,EACVhC,GAAI,CAAEiC,GAAI,GAJZ,UAMGzC,EACC,cAAC0C,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,KAAK,OACLC,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,UAGrC,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,gBACNQ,WAAW,uCACXvE,QAAQ,SACRoE,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,UAGvC,cAACV,EAAA,GAAD,GACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,oBARf,qBASO,YATP,sBAUSnD,GAVT,0BAWY,SAACmB,GAAD,OAAOlB,EAAYkB,EAAEqB,OAAOc,UAXxC,IAaA,cAACI,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACT7D,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GAJnB,qBAQA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAAC1E,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAvB,gCAIF,cAAC0E,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACzE,EAAA,EAAD,CAAMC,KAAK,UAAUJ,QAAQ,QAA7B,uDAOR,cAAC,EAAD,CAAWwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,WCiH9B5E,EAAY,SAACC,GACjB,OACE,eAACC,EAAA,EAAD,yBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFJ,GAJN,cAMG,kBACD,cAACK,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,IAA3B,2BAEQ,KACP,IAAIC,MAAOC,cACX,SAKDC,EAAQC,cAECsE,EAzQA,WACb,MAAkCnE,mBAAS,IAA3C,mBAAOoE,EAAP,KAAkBC,EAAlB,KACA,EAAgCrE,mBAAS,IAAzC,mBAAOsE,EAAP,KAAiBC,EAAjB,KACA,EAA0BvE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOwE,EAAP,KAAiBC,EAAjB,KACA,EAAoCzE,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA4CJ,mBAAS,IAArD,mBAAO0E,EAAP,KAAuBC,EAAvB,KACA,EAA0C3E,oBAAS,GAAnD,mBAAO4E,EAAP,KAAsBC,EAAtB,KACA,EAAkC7E,mBAAS,IAA3C,mBACA,GADA,UAC4BA,mBAAS,KAArC,mBAEM2B,GAFN,UAEmB,WACjB,GACEH,OAAOvB,GACJwB,cACAC,MACC,yJAIJ,OADApB,GAAc,GACPD,EAEPC,GAAc,SAACD,GAAD,OAAiBA,OAI7ByE,EAAgB,WACpB,GAAI3E,IAAauE,EAEf,OADAG,GAAiB,GACVD,EAEPC,GAAiB,SAACD,GAAD,OAAoBA,MA4CzC,OACE,cAACrE,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,eAACY,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,cAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,SACE,cAAC,IAAD,MAEF,cAAChC,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,qBAGA,eAACuB,EAAA,EAAD,CACEH,UAAU,OACVoC,YAAU,EACVxB,SA7DW,SAACC,GAKpB,GAJAA,EAAEC,iBACFI,IACAmD,IAEInD,GAAcmD,EAAe,CAC/B,IAAMlD,EAAO,CACXmD,WAAYX,EACZY,UAAWV,EACXrE,QACAuE,WACArE,YAIF0B,MAAM,UAAW,CACfC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KACpBO,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAACI,GAAD,OAAUE,QAAQC,IAAIH,MAEtCH,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,SAI5C6B,EAAa,IACbE,EAAY,IACZrE,EAAS,IACTuE,EAAY,IACZrE,EAAY,IACZuE,EAAkB,IAElBrD,EAAEqB,OAAOC,UA0BH/B,GAAI,CAAEiC,GAAI,GAJZ,UAME,eAACiB,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAS,EAAzB,UACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAvB,SACE,cAACnC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,aACbD,KAAK,YACLF,GAAG,YACHC,MAAM,aACNG,WAAS,EACTE,MAAOW,EACPV,SAAU,SAACpC,GAAD,OAAO+C,EAAa/C,EAAEqB,OAAOc,YAG3C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAvB,SACE,cAACnC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,cACbH,GAAG,WACHC,MAAM,YACNC,KAAK,WACLI,MAAOa,EACPZ,SAAU,SAACpC,GAAD,OAAOiD,EAAYjD,EAAEqB,OAAOc,YAI1C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACG7D,EACC,cAAC0C,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbG,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,UAGrC,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,gBACNQ,WAAW,uCACXvE,QAAQ,SACRoE,MAAOxD,EACPyD,SAAU,SAACpC,GAAD,OAAOpB,EAASoB,EAAEqB,OAAOc,YAIzC,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACnB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,WACbH,GAAG,WACHC,MAAM,WACNC,KAAK,WACLI,MAAOe,EACPd,SAAU,SAACpC,GAAD,OAAOmD,EAAYnD,EAAEqB,OAAOc,YAG1C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACGU,EACC,cAAC7B,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,eACbG,MAAOtD,EACPuD,SAAU,SAACpC,GAAD,OAAOlB,EAAYkB,EAAEqB,OAAOc,UAGxC,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,WACNQ,WAAW,0CACXvE,QAAQ,SACRmE,KAAK,WACLC,MAAOtD,EACPuD,SAAU,SAACpC,GAAD,OAAOlB,EAAYkB,EAAEqB,OAAOc,YAI5C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACGU,EACC,cAAC7B,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTG,KAAK,iBACLD,MAAM,sBACNI,KAAK,WACLL,GAAG,iBACHG,aAAa,qBACbG,MAAOiB,EACPhB,SAAU,SAACpC,GAAD,OAAOqD,EAAkBrD,EAAEqB,OAAOc,UAG9C,cAACV,EAAA,EAAD,CACEY,OAAK,EACLV,UAAQ,EACRC,WAAS,EACTC,GAAG,2BACHC,MAAM,sBACNQ,WAAW,0CACXvE,QAAQ,SACRmE,KAAK,WACLC,MAAOiB,EACPhB,SAAU,SAACpC,GAAD,OAAOqD,EAAkBrD,EAAEqB,OAAOc,eAKpD,cAACI,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACT7D,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GAJnB,qBAQA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACmB,eAAe,WAA/B,SACE,cAACpB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACzE,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAvB,wDAOR,cAAC,EAAD,CAAWwB,GAAI,CAAEiC,GAAI,W,kBCnIdsC,EAjHE,SAAC,GAAqC,IAAnCxD,EAAkC,EAAlCA,KAAMyD,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBAC9B,EAAyCtF,mBAAS,CAChDqF,KAAMA,EAAKhC,KACXkC,YAAa,KACbC,SAAU,KACVC,cAAe,KACfC,aAAc,OALhB,mBAAOC,EAAP,KAAqBC,EAArB,KAYAC,qBAAU,WACRhE,MAAM,UAAD,OACOD,EAAKuB,GADZ,kBACwBkC,EAAKlC,GAD7B,aAGFhB,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAAC2D,GACLC,EAAgBD,QAGnB,IAEH,IAAMC,EAAkB,SAACxD,GACvB,IAAIyD,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAQ,EACRC,EAAQ,EACRC,GAAY,EAChB9D,EAAK+D,KAAI,SAACC,GACRP,GAAQ,EACR,IAAIQ,EAAaD,EAAWE,QAAQC,KAAKC,GACrCH,EAAWI,QACbT,GAAgBK,EAAWI,MAC3BP,GAAY,GAEc,GAAxBG,EAAWK,YACbZ,GAAQ,MAIVC,EADED,EAAK,EACFa,EAAuBb,EAAGD,GAG1B,EAGLI,EADEC,EACMU,EAAsBZ,EAAMH,GAG3B,MAEX,IAAIgB,EAAS,CACX3B,KAAMA,EAAKhC,KACXkC,YAAaS,EACbR,SAAUS,EACVR,cAAeS,EACfR,aAAcU,GAGhB,OADAR,EAAiBoB,GACVA,GAGHL,EAAW,SAACM,GAChB,OAAOA,EAAOC,SAAWtF,EAAKuB,IAG1B4D,EAAwB,SAACI,EAAKC,GAClC,IACIC,GADMF,EAAKC,GACOE,WAClBC,EAAiBF,EAAYG,QAAQ,KACrCC,EAAsBJ,EAAYK,MAAM,EAAEH,EAAe,GAC7D,OAAOI,WAAWF,IAGdX,EAAyB,SAACK,EAAKC,GACnC,IACIC,GADMF,EAAKC,EAAM,KACAE,WACjBC,EAAiBF,EAAYG,QAAQ,KACrCC,EAAsBJ,EAAYK,MAAM,EAAEH,EAAe,GAC7D,OAAOI,WAAWF,IAGpB,OACE,8BACE,cAAC7G,EAAA,EAAD,CAAKoD,WAAS,EAACnB,YAAU,EAAChC,GAAI,CAAEiC,GAAI,GAApC,SACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,GAA7B,SACE,eAAC8E,EAAA,EAAD,CAAM/G,GAAI,CAAEH,SAAU,KAAtB,UACE,eAACmH,EAAA,EAAD,CAAatI,MAAM,SAAnB,UACE,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,SACG4E,EAAKhC,OACK,uBACb,cAACjE,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,kCACqBkF,EAAcD,gBACtB,uBACb,cAACtG,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,mCACsBkF,EAAcF,cADpC,cACuDE,EAAcH,SADrE,YACiFG,EAAcJ,YAD/F,UAIF,cAACsC,EAAA,EAAD,CAAatI,MAAM,SAAnB,SACE,cAACsE,EAAA,EAAD,CAAQiE,KAAK,QAAQvI,MAAM,QAAQwI,QA7FtB,WACvBzC,EAAgBD,IA4FN,qC,0GCvBC2C,EA3EG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMxB,EAAoB,EAApBA,QAAS7E,EAAW,EAAXA,KAClC,EAAwB5B,oBAAS,GAAjC,mBAAOkI,EAAP,KAAaC,EAAb,KACA,EAAwCnI,oBAAS,GAAjD,mBAAOoI,EAAP,KAAqBC,EAArB,KAUAxC,qBAAU,WAPRY,EAAQH,KAAI,SAACW,GACPA,EAAOC,UAAYtF,EAAKuB,KAA2B,IAArB8D,EAAOJ,WACvCwB,GAAgB,QAOnB,IAEH,IAAMC,EAAa7B,EAAQH,KAAI,SAACW,GAC9B,OAAyB,IAArBA,EAAOJ,UAEP,eAAC0B,EAAA,EAAD,CACE1H,GAAI,CAAE,mCAAoC,CAAE2H,OAAQ,IADtD,UAIE,cAACC,EAAA,EAAD,iCAAkBxB,EAAO5D,KAAzB,mBACA,cAACoF,EAAA,EAAD,oBAAexB,EAAOL,MAAtB,qBAHKK,EAAO9D,IAQd,eAACoF,EAAA,EAAD,CACE1H,GAAI,CAAE,mCAAoC,CAAE2H,OAAQ,IADtD,UAIE,cAACC,EAAA,EAAD,UAAYxB,EAAO5D,OACnB,cAACoF,EAAA,EAAD,UAAYxB,EAAOL,UAHdK,EAAO9D,OASpB,OACE,cAACuF,EAAA,EAAD,CAAgBjI,UAAWkI,IAA3B,SACE,eAACC,EAAA,EAAD,CAAO/H,GAAI,CAAEgI,SAAU,KAAOC,aAAW,eAAzC,UACE,cAACC,EAAA,EAAD,UACE,cAACR,EAAA,EAAD,UACE,eAACE,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,CACEF,aAAW,aACXhB,KAAK,QACLC,QAAS,kBAAMI,GAASD,IAH1B,SAKGA,EAAO,cAAC,IAAD,IAA0B,cAAC,IAAD,MAEnCE,EAAY,qCACWH,EADX,yCAEQA,UAK1BC,EACC,cAACa,EAAA,EAAD,UACE,eAACR,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,yBAGF,KAEHP,EAAO,cAACe,EAAA,EAAD,UAAYX,IAA0B,WCpDvCY,EA1BQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,aAAcvH,EAAW,EAAXA,KACtC,EAAkC5B,mBAAS,IAA3C,mBAAO8F,EAAP,KAAkBsD,EAAlB,KAEAvD,qBAAU,WACRhE,MAAM,UAAD,OAAWD,EAAKuB,GAAhB,kBAA4BgG,EAAahG,GAAzC,aACFhB,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAAC2D,GACLsD,EAAatD,QAEhB,IAEH,IAAMuD,EAAavD,EAAUQ,KAAI,SAAC5E,GAChC,OACE,cAAC,EAAD,CAEEyB,GAAIzB,EAAMyB,GACV8E,KAAMvG,EAAMuG,KACZxB,QAAS/E,EAAM+E,QACf7E,KAAMA,GAJDF,EAAMyB,OASjB,OAAO,8BAAMkG,KCKAC,EA3BO,SAAC,GAAyB,IAAvB1H,EAAsB,EAAtBA,KAAM2H,EAAgB,EAAhBA,UAC7B,EAAwCvJ,mBAAS,IAAjD,mBAAOmJ,EAAP,KAAqB7D,EAArB,KAEIkE,EAAW,GAETC,EAAWF,EAAUjD,KAAI,SAACjB,GAC9B,IAAmC,IAA/BmE,EAASE,SAASrE,EAAKlC,IAEzB,OADAqG,EAASG,KAAKtE,EAAKlC,IAEjB,cAAC,EAAD,CAEEA,GAAIkC,EAAKlC,GACTvB,KAAMA,EACNyD,KAAMA,EACNC,gBAAiBA,GAJZD,EAAKlC,OAUlB,MAAoB,IAAhBgG,EACK,8BAAMM,IAEN,cAAC,EAAD,CAAgBN,aAAcA,EAAcvH,KAAMA,K,0BCqWvDhC,EAAQC,cAEC+J,EAtXI,SAAC,GAAc,IAAZhI,EAAW,EAAXA,KACpB,EAAgC5B,mBAAS,IAAzC,mBAAO6J,EAAP,KAAiBC,EAAjB,KACA,EAAgC9J,mBAAS,IAAzC,mBAAO+J,EAAP,KAAiBC,EAAjB,KACA,EAAkChK,mBAAS,IAA3C,mBAAOiK,EAAP,KAAkBC,EAAlB,KACA,EAAkClK,mBAAS,IAA3C,mBAAOmK,EAAP,KAAkBC,EAAlB,KACA,EAAgCpK,mBAAS,CACvCqK,QAAS,KACTpC,KAAMkC,IAFR,mBAAOG,EAAP,KAAiBC,EAAjB,KAIA,EAAoCvK,mBAAS,CAC3C,CACEkH,QAAStF,EAAKuB,GACdqH,SAAU,KACV5D,MAAO,KACPC,WAAW,EACXxD,KAAK,GAAD,OAAKzB,EAAKmD,WAAV,YAAwBnD,EAAKoD,WACjC/E,MAAO,MAPX,mBAAOwK,EAAP,KAAmBC,EAAnB,KAUA,EAA8C1K,mBAAS,CAAC4B,EAAK3B,QAA7D,mBAAO0K,EAAP,KAAwBC,EAAxB,KA4BMC,EAAc,SAACxF,GACnB,IAAIyF,EAAa,2BAAQR,GAAR,IAAkBD,QAAShF,EAAKlC,GAAI8E,KAAMkC,IAC3DtI,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU4I,KACpB3I,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAAC4I,GACftI,QAAQC,IAAR,6BAAkCT,KAAKC,UAAU6I,KACjDC,EAAmBD,MAGrB3I,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,UAKxCwI,EAAqB,SAACtJ,GAC1BuJ,IACA,IAAIC,EAAe,YAAOT,GACtBU,EAAUD,EAAgBE,OAEVF,EAAgB5E,KAAI,SAAC+E,GACvCA,EAAYb,SAAW9I,EAAMyB,GAC7B,IAAImI,EAAgB,CAClBpE,QAASmE,EAAYnE,QACrBsD,SAAUa,EAAYb,SACtB5D,MAAOyE,EAAYzE,MACnBC,UAAWwE,EAAYxE,UACvBxD,KAAMgI,EAAYhI,MAEpBZ,QAAQC,IAAIT,KAAKC,UAAUoJ,EAAc,KAAK,IAC9CzJ,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUoJ,KACpBnJ,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAACoJ,GACf9I,QAAQC,IAAR,8BACyBT,KAAKC,UAAUqJ,EAAY,KAAM,QAI5DnJ,EACGE,OACAH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAR,UAAe4I,EAAcjI,KAA7B,cAAuCb,OAE/C2I,IAxElBjB,EAAa,IACbE,EAAa,IACbG,EAAY,CACVF,QAAS,KACTpC,KAAMkC,IAERO,EAAc,CACZ,CACExD,QAAStF,EAAKuB,GACdqH,SAAU,KACV5D,MAAO,KACPC,WAAW,EACXxD,KAAK,GAAD,OAAKzB,EAAKmD,WAAV,YAAwBnD,EAAKoD,WACjC/E,MAAO2B,EAAK3B,SAGhB2K,EAAmB,CAAChJ,EAAK3B,SA2DD,SAMpBuL,EAAkB,SAACC,GACvB,IAAIC,EAAkBD,EAAMhK,cACxBkK,GAAW,EACXC,GAAe,EACC/B,EAASvD,KAAI,SAACuF,GAChC,IAAIC,EAAiBD,EAAUxI,KAAK5B,cAChCiK,IAAoBI,IACtBH,GAAW,EACXC,EAAeC,EACfpJ,QAAQC,IAAR,4BAAiCmJ,EAAUxI,YAG9B,IAAbsI,GACF9J,MAAM,SAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBmB,KAAMoI,MAEPtJ,MAAK,SAACC,GACHA,EAAIC,GACND,EAAIE,OAAOH,MAAK,SAAC4J,GACfH,EAAeG,EACftJ,QAAQC,IAAR,0BAA+BT,KAAKC,UAAU0J,KAC9CrB,EAAY,2BACPD,GADM,IAETD,QAASuB,EAAazI,GACtB8E,KAAMkC,KAERU,EAAYe,MAGdxJ,EAAIE,OAAOH,MAAK,SAACK,GAAD,OAAYC,QAAQC,IAAIF,UAI7B,IAAbmJ,IACFlJ,QAAQC,IAAR,0BAA+BT,KAAKC,UAAU0J,KAC9CrB,EAAY,2BAAKD,GAAN,IAAgBD,QAASuB,EAAazI,GAAI8E,KAAMkC,KAC3DU,EAAYe,KAIhB/F,qBAAU,WACRhE,MAAM,UAAUM,MAAK,SAAC6J,GAChBA,EAAE3J,IACJ2J,EAAE1J,OAAOH,MAAK,SAAC8J,GAAD,OAAWnC,EAAYmC,WAGxC,IAEHpG,qBAAU,WACRhE,MAAM,UAAUM,MAAK,SAAC6J,GAChBA,EAAE3J,IACJ2J,EAAE1J,OAAOH,MAAK,SAAC+J,GAAD,OAAWlC,EAAYkC,WAGxC,IAEH,IAAMC,EAAmB,SAAC7K,GACxB,IAAM8K,EAAaC,SAAS/K,EAAEqB,OAAOU,MACjCiJ,EAAa,YAAO7B,GACxB6B,EAAcF,GAAY/I,KAAO/B,EAAEqB,OAAOc,MAC1CiH,EAAc4B,IAGVC,EAAoB,SAACjL,GACzB,IAAM8K,EAAaC,SAAS/K,EAAEqB,OAAOU,MACjCiJ,EAAa,YAAO7B,GACxB6B,EAAcF,GAAYxF,MAAQtF,EAAEqB,OAAOc,MAC3CiH,EAAc4B,IAGVE,EAAoB,SAAClL,GACzB,IAAM8K,EAAaC,SAAS/K,EAAEqB,OAAOU,MACjCoJ,EAAY,YAAO9B,GACvB8B,EAAaL,GAAc9K,EAAEqB,OAAOc,MACpCmH,EAAmB6B,GACnB,IAAIH,EAAa,YAAO7B,GACxB6B,EAAcF,GAAYnM,MAAQqB,EAAEqB,OAAOc,MAC3CiH,EAAc4B,IAGVI,EAAkB,SAACpL,GACvB,IAAM8K,EAAaC,SAAS/K,EAAEqB,OAAOU,MACjCiJ,EAAa,YAAO7B,GACxB6B,EAAcF,GAAYvF,WAAayF,EAAcF,GAAYvF,UACjE6D,EAAc4B,IAGVrB,EAAsB,WAC1B,IAAI0B,EAAU,EACOhC,EAAgBrE,KAAI,SAACsG,GACxC,IAAIC,EAAU,YAAOpC,GACjBqC,EAAkBF,EAAiBnL,cACnBsI,EAASzD,KAAI,SAACyG,GAChC,IAAIC,EAAgBD,EAAU9M,MAC1B6M,IAAoBE,EAAcvL,gBACpCoL,EAAWF,GAASzF,QAAU6F,EAAU5J,GACxC0J,EAAWF,GAAS1M,MAAQ8M,EAAU9M,MACtC4M,EAAWF,GAAStJ,KAApB,UAA8B0J,EAAUhI,WAAxC,YAAsDgI,EAAU/H,WAChEvC,QAAQC,IAAR,yBAA8BsK,EAA9B,kBAAqDD,EAAU5J,KAC/DuH,EAAcmC,OAElBF,GAAW,MAyEf,OACE,8BACE,cAACpM,EAAA,EAAD,CAAeX,MAAOA,EAAtB,SACE,eAACY,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdI,SAvRW,SAACC,GACpBA,EAAEC,iBACFiK,EAAgBvB,IA8QV,UASE,cAAC7K,EAAA,EAAD,CAAYqB,UAAU,KAAKpB,QAAQ,KAAnC,0BAIA,cAACuB,EAAA,EAAD,CAAKH,UAAU,OAAOoC,YAAU,EAAChC,GAAI,CAAEiC,GAAI,GAA3C,SACE,eAACiB,EAAA,EAAD,CAAMC,WAAS,EAACiB,QAAS,EAAzB,UACE,cAAClB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAvB,SACE,cAACnC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,YACbD,KAAK,OACLF,GAAG,WACHC,MAAM,OACNG,WAAS,EACTG,SAAU,SAACpC,GAAD,OAAO4I,EAAa5I,EAAEqB,OAAOc,YAG3C,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgB,GAAI,EAAvB,SACE,cAACnC,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAa,aACbH,GAAG,YACHC,MAAM,eACNC,KAAK,OACLK,SAAU,SAACpC,GAAD,OAAO8I,EAAa9I,EAAEqB,OAAOc,YAxFpC,WACnB,IAAIkJ,EAAU,EA4Cd,OA3CyB,YAAIlC,GAAYnE,KAAI,SAAC+E,GAE5C,OADEsB,GAAoB,EAEpB,gCACE,cAAC5I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACnB,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTI,aAAY,gBAAWqJ,EAAX,QACZxJ,GAAE,gBAAWwJ,EAAX,QACFvJ,MAAK,iBAAYuJ,EAAZ,SACLtJ,KAAI,UAAKsJ,EAAU,GACnBjJ,SAAUyI,MAId,cAACpI,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACnB,EAAA,EAAD,CACEG,WAAS,EACTI,aAAY,gBAAWqJ,EAAX,SACZxJ,GAAE,gBAAWwJ,EAAX,SACFvJ,MAAK,iBAAYuJ,EAAZ,8CACLtJ,KAAI,UAAKsJ,EAAU,GACnBjJ,SAAU8I,KAPd,gBAAiCG,EAAjC,UAWA,cAAC5I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACnB,EAAA,EAAD,CACEG,WAAS,EACTI,aAAY,gBAAWqJ,EAAX,SACZxJ,GAAE,gBAAWwJ,EAAX,SACFvJ,MAAK,iBAAYuJ,EAAZ,UACLtJ,KAAI,UAAKsJ,EAAU,GACnBjJ,SAAU6I,KAPd,gBAAiCI,EAAjC,UAUA,cAAC5I,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC+I,EAAA,EAAD,CAA+ClF,QAAS2E,EAAgBrJ,KAAI,UAAKsJ,EAAU,GAAIO,QAAS,cAACC,EAAA,EAAD,IAAc/J,MAAK,+BAAgBuJ,EAAhB,uBAA3H,gBAAgCA,EAAhC,aAnCJ,gBAAmBA,EAAnB,eAsFSS,GAED,cAACrJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACL,EAAA,EAAD,CACEiE,KAAK,QACLzI,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GACjBiE,QAxHA,SAACzG,GACjBoJ,EAAc,GAAD,mBACRD,GADQ,CAEX,CACEvD,QAAS,EACTsD,SAAU,KACV5D,MAAO,KACPC,WAAW,EACXxD,KAAM,GACNpD,MAAO,OAGX2K,EAAmB,GAAD,mBAAKD,GAAL,CAAsB,OAwG1B,0BAUF,cAAC5G,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAACL,EAAA,EAAD,CACEiE,KAAK,QACLzI,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GACjBiE,QAnHG,SAACzG,GACpB,IAAI+L,EAAe,YAAO5C,GAC1B4C,EAAgBC,MAChB5C,EAAc2C,IA4GA,6BAUF,cAACxJ,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACT7D,QAAQ,YACRwB,GAAI,CAAEiC,GAAI,EAAGgB,GAAI,GAJnB,0C,oBC7SDyJ,GAzDA,SAAC,GAAiB,IAAfxN,EAAc,EAAdA,QAWhB,OACE,cAACyN,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACjN,EAAA,EAAD,CAAWE,SAAS,KAApB,SACE,eAACgN,GAAA,EAAD,CAASC,gBAAc,EAAvB,UACE,cAACvO,EAAA,EAAD,CACEC,QAAQ,KACRuO,QAAM,EACNnN,UAAU,MACVI,GAAI,CAAEgN,GAAI,EAAG9M,QAAS,CAAEmD,GAAI,OAAQ4J,GAAI,SAJ1C,2BASA,cAAClN,EAAA,EAAD,CAAKC,GAAI,CAAEkN,SAAU,EAAGhN,QAAS,CAAEmD,GAAI,OAAQ4J,GAAI,SAAnD,SAaE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,cAACnK,EAAA,EAAD,CAAQhD,GAAI,CAAEoN,GAAI,EAAG3O,MAAO,QAASyB,QAAS,SAA9C,sBAMJ,cAACH,EAAA,EAAD,CAAKC,GAAI,CAAEkN,SAAU,GAArB,SACE,cAAClK,EAAA,EAAD,CACEhD,GAAI,CAAEoN,GAAI,EAAG3O,MAAO,QAASyB,QAAS,SACtCgH,QA9CS,WACnBhI,EAAQ,MACR8B,MAAM,UAAW,CACfC,OAAQ,SACRC,QAAS,CACP,eAAgB,uBAuCZ,8BC0BGmM,GArEF,SAAC,GAAuB,IAArBtM,EAAoB,EAApBA,KAAM7B,EAAc,EAAdA,QACpB,EAAkCC,mBAAS,IAA3C,mBAAOuJ,EAAP,KAAkB4E,EAAlB,KACA,EAAkCnO,oBAAS,GAA3C,mBAAOoO,EAAP,KAAkBC,EAAlB,KACA,EAA4BrO,oBAAS,GAArC,mBAAOsO,EAAP,KAAeC,EAAf,KAgBA,OACE,gCACE,cAAC,GAAD,CAAQxO,QAASA,IAChBqO,GAAaE,EACZ,8BACE,eAAC1N,EAAA,EAAD,CAAKoD,WAAS,EAACnB,YAAU,EAAChC,GAAI,CAAEiC,GAAI,GAApC,UACE,cAACiB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,GAA7B,SACE,eAAC8E,EAAA,EAAD,CAAM/G,GAAI,CAAEH,SAAU,KAAtB,UACE,cAACmH,EAAA,EAAD,CAAatI,MAAM,SAAnB,SACE,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,0BAIF,cAACoH,EAAA,EAAD,CAAatI,MAAM,SAAnB,SACE,cAACsE,EAAA,EAAD,CAAQiE,KAAK,QAAQvI,MAAM,QAAQwI,QA5B3B,WACtBlG,MAAM,UAAD,OAAWD,EAAKuB,GAAhB,WACFhB,MAAK,SAACC,GAAD,OAASA,EAAIE,UAClBH,MAAK,SAACqM,GACL,IAAIC,EAAcD,EAASE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEtL,KAAOuL,EAAEvL,KAAO,GAAK,KAClE8K,EAAaM,GACbJ,GAAa,SAACD,GAAD,OAAgBA,SAsBnB,iCAON,cAACrK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIrD,GAAI,CAAEiC,GAAI,GAA7B,SACE,eAAC8E,EAAA,EAAD,CAAM/G,GAAI,CAAEH,SAAU,KAAtB,UACE,cAACmH,EAAA,EAAD,CAAatI,MAAM,SAAnB,SACE,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKoB,UAAU,MAAnC,4BAIF,cAACoH,EAAA,EAAD,CAAatI,MAAM,SAAnB,SACE,cAACsE,EAAA,EAAD,CAAQiE,KAAK,QAAQvI,MAAM,QAAQwI,QAjC7B,WACpBwG,GAAU,SAACD,GAAD,OAAaA,MAgCT,mCAQPF,GAAaE,EAChB,8BACE,cAAC,EAAD,CAAe1M,KAAMA,EAAM2H,UAAWA,MAEtC6E,IAAcE,EAChB,8BACE,cAAC,EAAD,CAAY1M,KAAMA,MAElB,SCzCKiN,GA1BO,WACpB,OACE,cAACrB,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACjN,EAAA,EAAD,CAAWE,SAAS,KAApB,SACE,eAACgN,GAAA,EAAD,CAASC,gBAAc,EAAvB,UACE,cAAC/M,EAAA,EAAD,CAAKC,GAAI,CAAEkN,SAAU,EAAGhN,QAAS,CAAEmD,GAAI,OAAQ4J,GAAI,SAAnD,SACE,cAAC1O,EAAA,EAAD,CACEC,QAAQ,KACRuO,QAAM,EACNnN,UAAU,MACVI,GAAI,CAAEgN,GAAI,EAAG9M,QAAS,CAAEmD,GAAI,OAAQ4J,GAAI,SAJ1C,6BAUF,cAAClN,EAAA,EAAD,CAAKC,GAAI,CAAEkN,SAAU,GAArB,SACE,cAAClK,EAAA,EAAD,CAAQhD,GAAI,CAAEoN,GAAI,EAAG3O,MAAO,QAASyB,QAAS,SAA9C,6BC8BG+N,GA9CH,WACV,MAAwB9O,mBAAS,MAAjC,mBAAO4B,EAAP,KAAa7B,EAAb,KAYA,OAVA8F,qBAAU,WACRhE,MAAM,OAAOM,MAAK,SAAC6J,GACbA,EAAE3J,IACJ2J,EAAE1J,OAAOH,MAAK,SAAC4M,GACbhP,EAAQgP,WAIb,IAECnN,EAEA,qBAAKoN,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,CAAMnP,QAASA,EAAS6B,KAAMA,WAOpC,sBAAKoN,UAAU,MAAf,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAOnP,QAASA,aCzC5BoP,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f40dfe41.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst Login = ({setUser}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [login, setLogin] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    const user = {\n      email,\n      password,\n    };\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(user),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((data) => setUser(data));\n      } else {\n        res.json().then((errors) => console.log(errors));\n      }\n    });\n\n    setEmail(\"\");\n    setPassword(\"\");\n    e.target.reset();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            {emailValid ? (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            ) : (\n              <TextField\n                error\n                required\n                fullWidth\n                id=\"filled-error-helper-text\"\n                label=\"Email Address\"\n                helperText=\"Must be a valid email containing '@'\"\n                variant=\"filled\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            )}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  Don't have an account? Sign Up\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Score Counter\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst theme = createTheme();\n\nexport default Login;\n","import { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst SignUp = () => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const [setSignUp, setSetSignUp] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const checkPassword = () => {\n    if (password === passwordRepeat) {\n      setPasswordMatch(true);\n      return passwordMatch;\n    } else {\n      setPasswordMatch((passwordMatch) => !passwordMatch);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    checkPassword();\n\n    if (checkEmail && checkPassword) {\n      const user = {\n        first_name: firstname,\n        last_name: lastname,\n        email,\n        username,\n        password,\n      };\n\n\n      fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((data) => console.log(data));\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n\n      setFirstname(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      setPasswordRepeat(\"\");\n\n      e.target.reset();\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  label=\"First name\"\n                  autoFocus\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"family-name\"\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                {emailValid ? (\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Email Address\"\n                    helperText=\"Must be a valid email containing '@'\"\n                    variant=\"filled\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"username\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Password\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password-match\"\n                    label=\"Type Password Again\"\n                    type=\"password\"\n                    id=\"password-match\"\n                    autoComplete=\"new-password-match\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Type Password Again\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                )}\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Score Counter\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst theme = createTheme();\n\nexport default SignUp;\n","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState, useEffect } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\n\nconst GameCard = ({ user, game, setSelectedGame }) => {\n  const [gameAnalytics,setGameAnalytics] = useState({\n    game: game.name,\n    gamesPlayed: null,\n    gamesWon: null,\n    winPercentage: null,\n    averageScore: null\n  })\n\n  const handleSelectGame = () => {\n    setSelectedGame(game);\n  };\n\n  useEffect(() => {\n    fetch(\n      `/users/${user.id}/games/${game.id}/matches`\n    )\n      .then((res) => res.json())\n      .then((matchData) => {\n        obtainAnalytics(matchData)\n        ;\n      });\n  }, []);\n\n  const obtainAnalytics = (data) => {\n    let gp = 0\n    let gw = 0\n    let wp = 0\n    let totpt = 0\n    let avgsc = 0\n    let areScores = false\n    data.map((givenMatch) => {\n      gp = gp+1\n      let playerData = givenMatch.players.find(isPlayer)\n      if (playerData.score) {\n        totpt = totpt + playerData.score\n        areScores = true\n      }\n      if (playerData.is_winner == true){\n        gw = gw+1\n      }\n    })\n    if (gw > 0){\n      wp = truncatedWinPercentage(gw,gp)\n    }\n    else {\n      wp = 0\n    }\n    if (areScores){\n      avgsc = truncatedAverageScore(totpt,gp)\n    }\n    else {\n      avgsc =  \"N/A\"\n    }\n    let output = {\n      game: game.name,\n      gamesPlayed: gp,\n      gamesWon: gw,\n      winPercentage: wp,\n      averageScore: avgsc\n    }\n    setGameAnalytics(output)\n    return output\n  }\n\n  const isPlayer = (player) => {\n    return player.user_id == user.id\n  }\n\n  const truncatedAverageScore = (num1,num2) => {\n    let avg = num1/num2\n    let scoreString = avg.toString()\n    let indexOfDecimal = scoreString.indexOf(\".\")\n    let truncatedPercentage = scoreString.slice(0,indexOfDecimal+3)\n    return(parseFloat(truncatedPercentage))\n  }\n  \n  const truncatedWinPercentage = (num1,num2) => {\n    let wp = (num1/num2)*100\n    let scoreString = wp.toString()\n    let indexOfDecimal = scoreString.indexOf(\".\")\n    let truncatedPercentage = scoreString.slice(0,indexOfDecimal+3)\n    return(parseFloat(truncatedPercentage))\n  }\n\n  return (\n    <div>\n      <Box container noValidate sx={{ mt: 3 }}>\n        <Grid item xs={12} sx={{ mt: 3 }}>\n          <Card sx={{ maxWidth: 275 }}>\n            <CardContent align=\"center\">\n              <Typography variant=\"h5\" component=\"div\">\n                {game.name}\n              </Typography><br></br>\n              <Typography variant=\"h7\" component=\"div\">\n                {`Average Score: ${gameAnalytics.averageScore}`}\n              </Typography><br></br>\n              <Typography variant=\"h7\" component=\"div\">\n                {`Win Percentage: ${gameAnalytics.winPercentage}% (${gameAnalytics.gamesWon}/${gameAnalytics.gamesPlayed})`}\n              </Typography>\n            </CardContent>\n            <CardContent align=\"center\">\n              <Button size=\"small\" align=\"right\" onClick={handleSelectGame}>\n                Select Game\n              </Button>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default GameCard;\n","import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport { useState, useEffect } from \"react\";\n\nconst MatchCard = ({ date, players, user }) => {\n  const [open, setOpen] = useState(false);\n  const [playerWinner, setPlayerWinner] = useState(false);\n\n  const isSelfWinner = () => {\n    players.map((player) => {\n      if (player.user_id === user.id && player.is_winner === true) {\n        setPlayerWinner(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    isSelfWinner();\n  }, []);\n\n  const mapPlayers = players.map((player) => {\n    if (player.is_winner === true) {\n      return (\n        <TableRow\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          key={player.id}\n        >\n          <TableCell>{`👑 ${player.name} 👑`}</TableCell>\n          <TableCell>{`${player.score} 👑`}</TableCell>\n        </TableRow>\n      );\n    } else {\n      return (\n        <TableRow\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          key={player.id}\n        >\n          <TableCell>{player.name}</TableCell>\n          <TableCell>{player.score}</TableCell>\n        </TableRow>\n      );\n    }\n  });\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 400 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <IconButton\n                aria-label=\"expand row\"\n                size=\"small\"\n                onClick={() => setOpen(!open)}\n              >\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n              </IconButton>\n              {playerWinner\n                ? `👑 Date of Game: ${date} 👑`\n                : `Date of Game: ${date}`}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n\n        {open ? (\n          <TableHead>\n            <TableRow>\n              <TableCell>Players</TableCell>\n              <TableCell>Score</TableCell>\n            </TableRow>\n          </TableHead>\n        ) : null}\n\n        {open ? <TableBody>{mapPlayers}</TableBody> : null}\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatchCard;\n","import { useEffect, useState } from \"react\";\nimport MatchCard from \"./MatchCard\";\n\nconst MatchContainer = ({ selectedGame, user }) => {\n  const [matchData, setMatchData] = useState([]);\n\n  useEffect(() => {\n    fetch(`/users/${user.id}/games/${selectedGame.id}/matches`)\n      .then((res) => res.json())\n      .then((matchData) => {\n        setMatchData(matchData);\n      });\n  }, []);\n\n  const mapMatches = matchData.map((match) => {\n    return (\n      <MatchCard\n        key={match.id}\n        id={match.id}\n        date={match.date}\n        players={match.players}\n        user={user}\n      />\n    );\n  });\n\n  return <div>{mapMatches}</div>;\n};\n\nexport default MatchContainer;\n","import { useState } from \"react\";\nimport GameCard from \"./GameCard\";\nimport MatchContainer from \"./MatchContainer\";\n\nconst GameContainer = ({ user, userGames }) => {\n  const [selectedGame, setSelectedGame] = useState(\"\");\n\n  let game_ids = [];\n\n  const mapGames = userGames.map((game) => {\n    if (game_ids.includes(game.id) === false) {\n      game_ids.push(game.id);\n      return (\n        <GameCard\n          key={game.id}\n          id={game.id}\n          user={user}\n          game={game}\n          setSelectedGame={setSelectedGame}\n        />\n      );\n    }\n  });\n\n  if (selectedGame == \"\") {\n    return <div>{mapGames}</div>;\n  } else {\n    return <MatchContainer selectedGame={selectedGame} user={user} />;\n  }\n};\n\nexport default GameContainer;\n","import { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst AddNewGame = ({ user }) => {\n  const [allGames, setAllGames] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n  const [gameInput, setGameInput] = useState(\"\");\n  const [dateInput, setDateInput] = useState(\"\");\n  const [newMatch, setNewMatch] = useState({\n    game_id: null,\n    date: dateInput,\n  });\n  const [allPlayers, setAllPlayers] = useState([\n    {\n      user_id: user.id,\n      match_id: null,\n      score: null,\n      is_winner: false,\n      name: `${user.first_name} ${user.last_name}`,\n      email: \"\"\n    },\n  ]);\n  const [allPlayerEmails, setAllPlayerEmails] = useState([user.email]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    handleGameInput(gameInput);\n    ;\n  };\n\n  const handleFormReset = () => {\n    setGameInput(\"\");\n    setDateInput(\"\");\n    setNewMatch({\n      game_id: null,\n      date: dateInput,\n    });\n    setAllPlayers([\n      {\n        user_id: user.id,\n        match_id: null,\n        score: null,\n        is_winner: false,\n        name: `${user.first_name} ${user.last_name}`,\n        email: user.email\n      },\n    ]);\n    setAllPlayerEmails([user.email]);\n  }\n\n  const handleMatch = (game) => {\n    let newMatchEntry = { ...newMatch, game_id: game.id, date: dateInput };\n    fetch(\"/matches\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newMatchEntry),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((matchInDB) => {\n          console.log(`Match Added To DB: ${JSON.stringify(matchInDB)}`);\n          handlePlayerSubmit(matchInDB);\n        });\n      } else {\n        res.json().then((errors) => console.log(errors));\n      }\n    });\n  };\n\n  const handlePlayerSubmit = (match) => {\n    comparePlayerEmails();\n    let playersForEntry = [...allPlayers];\n    let ceiling = playersForEntry.length\n    let counter = 1\n    let playerEntries = playersForEntry.map((givenPlayer) => {\n      givenPlayer.match_id = match.id;\n      let preparedEntry = {\n        user_id: givenPlayer.user_id,\n        match_id: givenPlayer.match_id,\n        score: givenPlayer.score,\n        is_winner: givenPlayer.is_winner,\n        name: givenPlayer.name\n      }\n      console.log(JSON.stringify(preparedEntry,null,4))\n      fetch(\"/players\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(preparedEntry),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((playerinDB) => {\n            console.log(\n              `Player Added to DB: ${JSON.stringify(playerinDB, null, 4)}`\n            );\n          });\n        } else {\n          res\n            .json()\n            .then((errors) => console.log(`${preparedEntry.name} : ${errors}`));\n        }\n        if (counter = ceiling){\n          handleFormReset()\n        }\n        counter = counter + 1\n      });\n    });\n    \n  };\n\n  const handleGameInput = (input) => {\n    let inputComparison = input.toLowerCase();\n    let gameInDB = false;\n    let gameForEntry = false;\n    let comparedGames = allGames.map((givenGame) => {\n      let gameComparison = givenGame.name.toLowerCase();\n      if (inputComparison === gameComparison) {\n        gameInDB = true;\n        gameForEntry = givenGame;\n        console.log(`Game Entry Found: ${givenGame.name}`);\n      }\n    });\n    if (gameInDB === false) {\n      fetch(\"/games\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: input,\n        }),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((newGameEntry) => {\n            gameForEntry = newGameEntry;\n            console.log(`Game For Entry: ${JSON.stringify(gameForEntry)}`);\n            setNewMatch({\n              ...newMatch,\n              game_id: gameForEntry.id,\n              date: dateInput,\n            });\n            handleMatch(gameForEntry);\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n    }\n    if (gameInDB === true) {\n      console.log(`Game For Entry: ${JSON.stringify(gameForEntry)}`);\n      setNewMatch({ ...newMatch, game_id: gameForEntry.id, date: dateInput });\n      handleMatch(gameForEntry);\n    }\n  };\n\n  useEffect(() => {\n    fetch(\"/games\").then((r) => {\n      if (r.ok) {\n        r.json().then((games) => setAllGames(games));\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/users\").then((r) => {\n      if (r.ok) {\n        r.json().then((users) => setAllUsers(users));\n      }\n    });\n  }, []);\n\n  const handlePlayerName = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].name = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const handlePlayerScore = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].score = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const handlePlayerEmail = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEmails = [...allPlayerEmails];\n    playerEmails[indexValue] = e.target.value;\n    setAllPlayerEmails(playerEmails);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].email = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const handlePlayerWin = (e) => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].is_winner = !playerEntries[indexValue].is_winner\n    setAllPlayers(playerEntries)\n  }\n\n  const comparePlayerEmails = () => {\n    let counter = 0;\n    let comparedEmails = allPlayerEmails.map((givenPlayerEmail) => {\n      let playerList = [...allPlayers];\n      let emailComparison = givenPlayerEmail.toLowerCase();\n      let comparedUsers = allUsers.map((givenUser) => {\n        let databaseEmail = givenUser.email;\n        if (emailComparison === databaseEmail.toLowerCase()) {\n          playerList[counter].user_id = givenUser.id;\n          playerList[counter].email = givenUser.email\n          playerList[counter].name = `${givenUser.first_name} ${givenUser.last_name}`\n          console.log(`User Found for ${databaseEmail} at id ${givenUser.id}`);\n          setAllPlayers(playerList);\n        }});\n      counter += 1;});\n  };\n\n  const addPlayer = (e) => {\n    setAllPlayers([\n      ...allPlayers,\n      {\n        user_id: 1,\n        match_id: null,\n        score: null,\n        is_winner: false,\n        name: \"\",\n        email: \"\"\n      },\n    ]);\n    setAllPlayerEmails([...allPlayerEmails, \"\"]);\n    \n  };\n\n  const removePlayer = (e) => {\n    let playersMinusOne = [...allPlayers];\n    playersMinusOne.pop();\n    setAllPlayers(playersMinusOne);\n  };\n\n  const spawnPlayers = () => {\n    let counter = 0;\n    const displayedPlayers = [...allPlayers].map((givenPlayer) => {\n        counter = counter + 1;\n      return (\n        <div key={`player${counter}tracker`}>\n          <Grid item xs={12}>\n            <TextField\n              required\n              fullWidth\n              autoComplete={`player${counter}name`}\n              id={`player${counter}name`}\n              label={`Player ${counter} Name`}\n              name={`${counter - 1}`}\n              onChange={handlePlayerName}\n            />\n          </Grid>\n\n          <Grid item xs={12} key={`player${counter}email`}>\n            <TextField\n              fullWidth\n              autoComplete={`player${counter}email`}\n              id={`player${counter}email`}\n              label={`Player ${counter} Email (Link score to a friend's account!)`}\n              name={`${counter - 1}`}\n              onChange={handlePlayerEmail}\n            />\n          </Grid>\n\n          <Grid item xs={12} key={`player${counter}score`}>\n            <TextField\n              fullWidth\n              autoComplete={`player${counter}score`}\n              id={`player${counter}score`}\n              label={`Player ${counter} Score`}\n              name={`${counter - 1}`}\n              onChange={handlePlayerScore}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControlLabel key={`player${counter}wins`} onClick={handlePlayerWin}name={`${counter - 1}`}control={<Checkbox />} label={`👑  Player ${counter} Wins 👑`} />\n          </Grid>\n        </div>\n      );\n      });\n    return displayedPlayers;\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Typography component=\"h1\" variant=\"h5\">\n              Add New Game\n            </Typography>\n\n            <Box component=\"form\" noValidate sx={{ mt: 3 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    autoComplete=\"game-name\"\n                    name=\"name\"\n                    id=\"gameName\"\n                    label=\"Game\"\n                    autoFocus\n                    onChange={(e) => setGameInput(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    autoComplete=\"match-date\"\n                    id=\"matchDate\"\n                    label=\"Date of Game\"\n                    name=\"date\"\n                    onChange={(e) => setDateInput(e.target.value)}\n                  />\n                </Grid>\n                {spawnPlayers()}\n\n                <Grid item xs={6}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    onClick={addPlayer}\n                  >\n                    Add Player\n                  </Button>\n                </Grid>\n\n                <Grid item xs={6}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    sx={{ mt: 3, mb: 2 }}\n                    onClick={removePlayer}\n                  >\n                    Remove Player\n                  </Button>\n                </Grid>\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2 }}\n                >\n                  Add New Game\n                </Button>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nconst theme = createTheme();\n\nexport default AddNewGame;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = ({ setUser }) => {\n  const handleLogout = () => {\n    setUser(null);\n    fetch(\"/logout\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n          >\n            Score Counter\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {/* <Link to=\"/games\">\n              <Button sx={{ my: 2, color: \"white\", display: \"block\" }}>\n                My Games\n              </Button>\n            </Link> */}\n\n            {/* <Link to=\"/addnew\">\n              <Button sx={{ my: 2, color: \"white\", display: \"block\" }}>\n                Add New Game\n              </Button>\n            </Link> */}\n\n            <Link to=\"/\">\n              <Button sx={{ my: 2, color: \"white\", display: \"block\" }}>\n                Home\n              </Button>\n            </Link>\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Button\n              sx={{ my: 2, color: \"white\", display: \"block\" }}\n              onClick={handleLogout}\n            >\n              Logout\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Header;\n","import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { useState } from \"react\";\nimport GameContainer from \"./GameContainer\";\nimport AddNewGame from \"./AddNewGame\";\nimport Header from \"./Header\";\n\nconst Home = ({ user, setUser }) => {\n  const [userGames, setUserGames] = useState([]);\n  const [clickFind, setClickFind] = useState(true);\n  const [addNew, setAddNew] = useState(true);\n\n  const handleFindGames = () => {\n    fetch(`/users/${user.id}/games`)\n      .then((res) => res.json())\n      .then((gameData) => {\n        let sortedGames = gameData.sort((a, b) => (a.name > b.name ? 1 : -1));\n        setUserGames(sortedGames);\n        setClickFind((clickFind) => !clickFind);\n      });\n  };\n\n  const handleAddGame = () => {\n    setAddNew((addNew) => !addNew);\n  };\n\n  return (\n    <div>\n      <Header setUser={setUser} />\n      {clickFind && addNew ? (\n        <div>\n          <Box container noValidate sx={{ mt: 3 }}>\n            <Grid item xs={12} sx={{ mt: 3 }}>\n              <Card sx={{ maxWidth: 275 }}>\n                <CardContent align=\"center\">\n                  <Typography variant=\"h5\" component=\"div\">\n                    View Games\n                  </Typography>\n                </CardContent>\n                <CardContent align=\"center\">\n                  <Button size=\"small\" align=\"right\" onClick={handleFindGames}>\n                    Select games\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            <Grid item xs={12} sx={{ mt: 3 }}>\n              <Card sx={{ maxWidth: 275 }}>\n                <CardContent align=\"center\">\n                  <Typography variant=\"h5\" component=\"div\">\n                    Add New Game\n                  </Typography>\n                </CardContent>\n                <CardContent align=\"center\">\n                  <Button size=\"small\" align=\"right\" onClick={handleAddGame}>\n                    Add Game\n                  </Button>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Box>\n        </div>\n      ) : !clickFind && addNew ? (\n        <div>\n          <GameContainer user={user} userGames={userGames} />\n        </div>\n      ) : clickFind && !addNew ? (\n        <div>\n          <AddNewGame user={user} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Home;\n","import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Button from \"@mui/material/Button\";\n\nconst HeaderNonUser = () => {\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\n            >\n              Score Counter\n            </Typography>\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Button sx={{ my: 2, color: \"white\", display: \"block\" }}>\n              Login\n            </Button>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default HeaderNonUser;\n","import { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport SignUp from \"./SignUp\";\nimport Home from \"./Home\";\nimport GamesContainer from \"./GameContainer\";\nimport MatchContainer from \"./MatchContainer\";\nimport HeaderNonUser from \"./HeaderNonUser\";\n\nconst App = () => {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((foundUser) => {\n          setUser(foundUser);\n        });\n      }\n    });\n  }, []);\n\n  if (user) {\n    return (\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/games\">\n            <GamesContainer />\n          </Route>\n          <Route exact path=\"/addnew\">\n            <MatchContainer />\n          </Route>\n          <Route exact path=\"/\">\n            <Home setUser={setUser} user={user} />\n          </Route>\n        </Switch>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"app\">\n        <HeaderNonUser />\n        <Switch>\n          <Route exact path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route exact path=\"/\">\n            <Login setUser={setUser} />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}